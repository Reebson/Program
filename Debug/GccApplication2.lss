
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c0  00800100  000013a6  0000143a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  008001c0  008001c0  000014fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000014fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000152c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  0000156c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d6f  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f67  00000000  00000000  0000550b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017e5  00000000  00000000  00006472  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000062c  00000000  00000000  00007c58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000983  00000000  00000000  00008284  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b3c  00000000  00000000  00008c07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  0000a743  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 6b 07 	jmp	0xed6	; 0xed6 <__vector_3>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 21 07 	jmp	0xe42	; 0xe42 <__vector_5>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 a8 05 	jmp	0xb50	; 0xb50 <__vector_18>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	11 e0       	ldi	r17, 0x01	; 1
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e6 ea       	ldi	r30, 0xA6	; 166
      c8:	f3 e1       	ldi	r31, 0x13	; 19
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a0 3c       	cpi	r26, 0xC0	; 192
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	21 e0       	ldi	r18, 0x01	; 1
      d8:	a0 ec       	ldi	r26, 0xC0	; 192
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a2 3e       	cpi	r26, 0xE2	; 226
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 c9 07 	call	0xf92	; 0xf92 <main>
      ea:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <i2cInit>:
#include <avr/io.h>
#include "i2c.h"

void i2cInit() {
    TWBR0 = TWBR_VALUE;
      f2:	88 e4       	ldi	r24, 0x48	; 72
      f4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    TWSR0 = ((1<<TWPS1)|(0<<TWPS0));
      f8:	82 e0       	ldi	r24, 0x02	; 2
      fa:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
      fe:	08 95       	ret

00000100 <i2cWait>:
}

void i2cWait() {
    while (!(TWCR0 & (1 << TWINT)));
     100:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     104:	88 23       	and	r24, r24
     106:	e4 f7       	brge	.-8      	; 0x100 <i2cWait>
}
     108:	08 95       	ret

0000010a <i2cStart>:

void i2cStart() {
    TWCR0 = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     10a:	84 ea       	ldi	r24, 0xA4	; 164
     10c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    i2cWait();
     110:	0e 94 80 00 	call	0x100	; 0x100 <i2cWait>
     114:	08 95       	ret

00000116 <i2cStop>:
}

void i2cStop() {
    TWCR0 = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     116:	84 e9       	ldi	r24, 0x94	; 148
     118:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

    while ((TWCR0 & (1 << TWSTO)));
     11c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     120:	84 fd       	sbrc	r24, 4
     122:	fc cf       	rjmp	.-8      	; 0x11c <i2cStop+0x6>
}
     124:	08 95       	ret

00000126 <i2cSendData>:

void i2cSendData(uint8_t data) {
    TWDR0 = data;
     126:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    TWCR0 = (1 << TWINT) | (1 << TWEN);
     12a:	84 e8       	ldi	r24, 0x84	; 132
     12c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    i2cWait();
     130:	0e 94 80 00 	call	0x100	; 0x100 <i2cWait>
     134:	08 95       	ret

00000136 <setOutputs8574>:
//Shift cursor right by n	                        
void LCDcursorRight(uint8_t n){
	uint8_t i;
	for (i=0;i<n;i++)
		LCDsendCommand(HD44780_DISPLAY_CURSOR_SHIFT | HD44780_SHIFT_CURSOR | HD44780_SHIFT_RIGHT);
}	
     136:	cf 93       	push	r28
     138:	c8 2f       	mov	r28, r24
     13a:	0e 94 85 00 	call	0x10a	; 0x10a <i2cStart>
     13e:	8e e4       	ldi	r24, 0x4E	; 78
     140:	0e 94 93 00 	call	0x126	; 0x126 <i2cSendData>
     144:	8c 2f       	mov	r24, r28
     146:	0e 94 93 00 	call	0x126	; 0x126 <i2cSendData>
     14a:	0e 94 8b 00 	call	0x116	; 0x116 <i2cStop>
     14e:	83 e0       	ldi	r24, 0x03	; 3
     150:	8a 95       	dec	r24
     152:	f1 f7       	brne	.-4      	; 0x150 <setOutputs8574+0x1a>
     154:	00 00       	nop
     156:	cf 91       	pop	r28
     158:	08 95       	ret

0000015a <sendHalfByteLCD>:
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
     15e:	20 91 c0 01 	lds	r18, 0x01C0	; 0x8001c0 <__data_end>
     162:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     166:	30 e1       	ldi	r19, 0x10	; 16
     168:	83 9f       	mul	r24, r19
     16a:	e0 01       	movw	r28, r0
     16c:	11 24       	eor	r1, r1
     16e:	82 2f       	mov	r24, r18
     170:	89 2b       	or	r24, r25
     172:	8c 2b       	or	r24, r28
     174:	84 60       	ori	r24, 0x04	; 4
     176:	0e 94 9b 00 	call	0x136	; 0x136 <setOutputs8574>
     17a:	38 e0       	ldi	r19, 0x08	; 8
     17c:	3a 95       	dec	r19
     17e:	f1 f7       	brne	.-4      	; 0x17c <sendHalfByteLCD+0x22>
     180:	00 00       	nop
     182:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <__data_end>
     186:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     18a:	89 2b       	or	r24, r25
     18c:	8c 2b       	or	r24, r28
     18e:	0e 94 9b 00 	call	0x136	; 0x136 <setOutputs8574>
     192:	38 e0       	ldi	r19, 0x08	; 8
     194:	3a 95       	dec	r19
     196:	f1 f7       	brne	.-4      	; 0x194 <sendHalfByteLCD+0x3a>
     198:	00 00       	nop
     19a:	df 91       	pop	r29
     19c:	cf 91       	pop	r28
     19e:	08 95       	ret

000001a0 <LCDsendChar>:
     1a0:	cf 93       	push	r28
     1a2:	c8 2f       	mov	r28, r24
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <__data_end>
     1aa:	8c 2f       	mov	r24, r28
     1ac:	82 95       	swap	r24
     1ae:	8f 70       	andi	r24, 0x0F	; 15
     1b0:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
     1b4:	8c 2f       	mov	r24, r28
     1b6:	8f 70       	andi	r24, 0x0F	; 15
     1b8:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
     1bc:	81 e2       	ldi	r24, 0x21	; 33
     1be:	8a 95       	dec	r24
     1c0:	f1 f7       	brne	.-4      	; 0x1be <LCDsendChar+0x1e>
     1c2:	00 00       	nop
     1c4:	cf 91       	pop	r28
     1c6:	08 95       	ret

000001c8 <LCDstring>:
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	00 97       	sbiw	r24, 0x00	; 0
     1d2:	69 f0       	breq	.+26     	; 0x1ee <LCDstring+0x26>
     1d4:	d6 2f       	mov	r29, r22
     1d6:	8c 01       	movw	r16, r24
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	07 c0       	rjmp	.+14     	; 0x1ea <LCDstring+0x22>
     1dc:	f8 01       	movw	r30, r16
     1de:	ec 0f       	add	r30, r28
     1e0:	f1 1d       	adc	r31, r1
     1e2:	80 81       	ld	r24, Z
     1e4:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCDsendChar>
     1e8:	cf 5f       	subi	r28, 0xFF	; 255
     1ea:	cd 17       	cp	r28, r29
     1ec:	b8 f3       	brcs	.-18     	; 0x1dc <LCDstring+0x14>
     1ee:	df 91       	pop	r29
     1f0:	cf 91       	pop	r28
     1f2:	1f 91       	pop	r17
     1f4:	0f 91       	pop	r16
     1f6:	08 95       	ret

000001f8 <LCDsendCommand>:
     1f8:	cf 93       	push	r28
     1fa:	c8 2f       	mov	r28, r24
     1fc:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <__data_end>
     200:	82 95       	swap	r24
     202:	8f 70       	andi	r24, 0x0F	; 15
     204:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
     208:	8c 2f       	mov	r24, r28
     20a:	8f 70       	andi	r24, 0x0F	; 15
     20c:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
     210:	81 e2       	ldi	r24, 0x21	; 33
     212:	8a 95       	dec	r24
     214:	f1 f7       	brne	.-4      	; 0x212 <LCDsendCommand+0x1a>
     216:	00 00       	nop
     218:	cf 91       	pop	r28
     21a:	08 95       	ret

0000021c <LCDclr>:
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     222:	08 95       	ret

00000224 <LCDhome>:
     224:	82 e0       	ldi	r24, 0x02	; 2
     226:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     22a:	83 ec       	ldi	r24, 0xC3	; 195
     22c:	99 e0       	ldi	r25, 0x09	; 9
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <LCDhome+0xa>
     232:	00 c0       	rjmp	.+0      	; 0x234 <LCDhome+0x10>
     234:	00 00       	nop
     236:	08 95       	ret

00000238 <lcd_locate>:
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	d8 2f       	mov	r29, r24
     23e:	c6 2f       	mov	r28, r22
     240:	61 11       	cpse	r22, r1
     242:	03 c0       	rjmp	.+6      	; 0x24a <lcd_locate+0x12>
     244:	80 68       	ori	r24, 0x80	; 128
     246:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     24a:	c1 30       	cpi	r28, 0x01	; 1
     24c:	29 f4       	brne	.+10     	; 0x258 <lcd_locate+0x20>
     24e:	80 e4       	ldi	r24, 0x40	; 64
     250:	8d 0f       	add	r24, r29
     252:	80 68       	ori	r24, 0x80	; 128
     254:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     258:	c2 30       	cpi	r28, 0x02	; 2
     25a:	29 f4       	brne	.+10     	; 0x266 <lcd_locate+0x2e>
     25c:	84 e1       	ldi	r24, 0x14	; 20
     25e:	8d 0f       	add	r24, r29
     260:	80 68       	ori	r24, 0x80	; 128
     262:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     266:	c3 30       	cpi	r28, 0x03	; 3
     268:	29 f4       	brne	.+10     	; 0x274 <lcd_locate+0x3c>
     26a:	84 e5       	ldi	r24, 0x54	; 84
     26c:	8d 0f       	add	r24, r29
     26e:	80 68       	ori	r24, 0x80	; 128
     270:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	08 95       	ret

0000027a <LCDinit>:
	sendHalfByteLCD(data & 0x0F);
	_delay_us(delayCommand);
}
//Initializes LCD
void LCDinit(void)			                            
{
     27a:	cf 93       	push	r28
	unsigned char itr=0;
	
	i2cInit();
     27c:	0e 94 79 00 	call	0xf2	; 0xf2 <i2cInit>
	
	RSval = RS_COMMAND;
     280:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <__data_end>
	for(itr=0;itr<3;itr++){
     284:	c0 e0       	ldi	r28, 0x00	; 0
     286:	0a c0       	rjmp	.+20     	; 0x29c <LCDinit+0x22>
		sendHalfByteLCD(0x03);
     288:	83 e0       	ldi	r24, 0x03	; 3
     28a:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28e:	8b ed       	ldi	r24, 0xDB	; 219
     290:	95 e0       	ldi	r25, 0x05	; 5
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <LCDinit+0x18>
     296:	00 c0       	rjmp	.+0      	; 0x298 <LCDinit+0x1e>
     298:	00 00       	nop
	unsigned char itr=0;
	
	i2cInit();
	
	RSval = RS_COMMAND;
	for(itr=0;itr<3;itr++){
     29a:	cf 5f       	subi	r28, 0xFF	; 255
     29c:	c3 30       	cpi	r28, 0x03	; 3
     29e:	a0 f3       	brcs	.-24     	; 0x288 <LCDinit+0xe>
		sendHalfByteLCD(0x03);
		_delay_ms(6);
	}
	sendHalfByteLCD(0x02);
     2a0:	82 e0       	ldi	r24, 0x02	; 2
     2a2:	0e 94 ad 00 	call	0x15a	; 0x15a <sendHalfByteLCD>
     2a6:	89 ef       	ldi	r24, 0xF9	; 249
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCDinit+0x30>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <LCDinit+0x36>
     2b0:	00 00       	nop
	_delay_ms(1);
	LCDsendCommand(HD44780_FUNCTION_SET | HD44780_FONT5x10 | HD44780_TWO_LINE | HD44780_4_BIT); // 5x10 font, two line, 4bit interface
     2b2:	8c e2       	ldi	r24, 0x2C	; 44
     2b4:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
	LCDsendCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_OFF); // turn off display
     2b8:	88 e0       	ldi	r24, 0x08	; 8
     2ba:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
	LCDsendCommand(HD44780_CLEAR); // clear DDRAM
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
     2c4:	9f e9       	ldi	r25, 0x9F	; 159
     2c6:	26 e8       	ldi	r18, 0x86	; 134
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	91 50       	subi	r25, 0x01	; 1
     2cc:	20 40       	sbci	r18, 0x00	; 0
     2ce:	80 40       	sbci	r24, 0x00	; 0
     2d0:	e1 f7       	brne	.-8      	; 0x2ca <LCDinit+0x50>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <LCDinit+0x5a>
     2d4:	00 00       	nop
	_delay_ms(500);
	LCDsendCommand(HD44780_ENTRY_MODE | HD44780_EM_SHIFT_CURSOR | HD44780_EM_INCREMENT);// inkrement addres, move coursore mode
     2d6:	86 e0       	ldi	r24, 0x06	; 6
     2d8:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
	LCDsendCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_ON | HD44780_CURSOR_OFF | HD44780_CURSOR_NOBLINK); // turn on LCD, cursor on, blink on
     2dc:	8c e0       	ldi	r24, 0x0C	; 12
     2de:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <LCDsendCommand>
}
     2e2:	cf 91       	pop	r28
     2e4:	08 95       	ret

000002e6 <displayReadingMenu>:
	if(newValue <= thresholdsParameters.foto) // zmienic warunek <= na >=		
		PORTC |= (1<<PC3);		    // domyslnie PC0						//wyjscie zalacza sie	
																						
	else
		PORTC &= ~(1<<PC3);		    // domyslnie PC0							//wyjscie wylaczone
}
     2e6:	ef 92       	push	r14
     2e8:	ff 92       	push	r15
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	00 d0       	rcall	.+0      	; 0x2f4 <displayReadingMenu+0xe>
     2f4:	1f 92       	push	r1
     2f6:	cd b7       	in	r28, 0x3d	; 61
     2f8:	de b7       	in	r29, 0x3e	; 62
     2fa:	84 30       	cpi	r24, 0x04	; 4
     2fc:	91 05       	cpc	r25, r1
     2fe:	09 f4       	brne	.+2      	; 0x302 <displayReadingMenu+0x1c>
     300:	82 c0       	rjmp	.+260    	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     302:	1c f4       	brge	.+6      	; 0x30a <displayReadingMenu+0x24>
     304:	99 23       	and	r25, r25
     306:	2c f4       	brge	.+10     	; 0x312 <displayReadingMenu+0x2c>
     308:	82 c1       	rjmp	.+772    	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     30a:	05 97       	sbiw	r24, 0x05	; 5
     30c:	09 f4       	brne	.+2      	; 0x310 <displayReadingMenu+0x2a>
     30e:	05 c1       	rjmp	.+522    	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
     310:	7e c1       	rjmp	.+764    	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     312:	60 e0       	ldi	r22, 0x00	; 0
     314:	83 e0       	ldi	r24, 0x03	; 3
     316:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     31a:	66 e0       	ldi	r22, 0x06	; 6
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	91 e0       	ldi	r25, 0x01	; 1
     320:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     324:	0f 2e       	mov	r0, r31
     326:	f4 ed       	ldi	r31, 0xD4	; 212
     328:	ef 2e       	mov	r14, r31
     32a:	f1 e0       	ldi	r31, 0x01	; 1
     32c:	ff 2e       	mov	r15, r31
     32e:	f0 2d       	mov	r31, r0
     330:	f7 01       	movw	r30, r14
     332:	80 81       	ld	r24, Z
     334:	91 81       	ldd	r25, Z+1	; 0x01
     336:	4a e0       	ldi	r20, 0x0A	; 10
     338:	8e 01       	movw	r16, r28
     33a:	0f 5f       	subi	r16, 0xFF	; 255
     33c:	1f 4f       	sbci	r17, 0xFF	; 255
     33e:	b8 01       	movw	r22, r16
     340:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	89 e0       	ldi	r24, 0x09	; 9
     348:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     34c:	62 e0       	ldi	r22, 0x02	; 2
     34e:	c8 01       	movw	r24, r16
     350:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     354:	61 e0       	ldi	r22, 0x01	; 1
     356:	83 e0       	ldi	r24, 0x03	; 3
     358:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     35c:	66 e0       	ldi	r22, 0x06	; 6
     35e:	8a e0       	ldi	r24, 0x0A	; 10
     360:	91 e0       	ldi	r25, 0x01	; 1
     362:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     366:	f7 01       	movw	r30, r14
     368:	82 81       	ldd	r24, Z+2	; 0x02
     36a:	93 81       	ldd	r25, Z+3	; 0x03
     36c:	4a e0       	ldi	r20, 0x0A	; 10
     36e:	b8 01       	movw	r22, r16
     370:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     374:	61 e0       	ldi	r22, 0x01	; 1
     376:	89 e0       	ldi	r24, 0x09	; 9
     378:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     37c:	62 e0       	ldi	r22, 0x02	; 2
     37e:	c8 01       	movw	r24, r16
     380:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     384:	62 e0       	ldi	r22, 0x02	; 2
     386:	83 e0       	ldi	r24, 0x03	; 3
     388:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     38c:	66 e0       	ldi	r22, 0x06	; 6
     38e:	81 e1       	ldi	r24, 0x11	; 17
     390:	91 e0       	ldi	r25, 0x01	; 1
     392:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     396:	f7 01       	movw	r30, r14
     398:	84 81       	ldd	r24, Z+4	; 0x04
     39a:	95 81       	ldd	r25, Z+5	; 0x05
     39c:	4a e0       	ldi	r20, 0x0A	; 10
     39e:	b8 01       	movw	r22, r16
     3a0:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     3a4:	62 e0       	ldi	r22, 0x02	; 2
     3a6:	89 e0       	ldi	r24, 0x09	; 9
     3a8:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     3ac:	62 e0       	ldi	r22, 0x02	; 2
     3ae:	c8 01       	movw	r24, r16
     3b0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     3b4:	63 e0       	ldi	r22, 0x03	; 3
     3b6:	83 e0       	ldi	r24, 0x03	; 3
     3b8:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     3bc:	64 e0       	ldi	r22, 0x04	; 4
     3be:	88 e1       	ldi	r24, 0x18	; 24
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     3c6:	f7 01       	movw	r30, r14
     3c8:	86 81       	ldd	r24, Z+6	; 0x06
     3ca:	97 81       	ldd	r25, Z+7	; 0x07
     3cc:	4a e0       	ldi	r20, 0x0A	; 10
     3ce:	b8 01       	movw	r22, r16
     3d0:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     3d4:	63 e0       	ldi	r22, 0x03	; 3
     3d6:	89 e0       	ldi	r24, 0x09	; 9
     3d8:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     3dc:	f8 01       	movw	r30, r16
     3de:	01 90       	ld	r0, Z+
     3e0:	00 20       	and	r0, r0
     3e2:	e9 f7       	brne	.-6      	; 0x3de <displayReadingMenu+0xf8>
     3e4:	31 97       	sbiw	r30, 0x01	; 1
     3e6:	bf 01       	movw	r22, r30
     3e8:	60 1b       	sub	r22, r16
     3ea:	71 0b       	sbc	r23, r17
     3ec:	c8 01       	movw	r24, r16
     3ee:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     3f2:	63 e0       	ldi	r22, 0x03	; 3
     3f4:	8c e0       	ldi	r24, 0x0C	; 12
     3f6:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	8e e1       	ldi	r24, 0x1E	; 30
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     404:	04 c1       	rjmp	.+520    	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     40e:	66 e0       	ldi	r22, 0x06	; 6
     410:	8a e0       	ldi	r24, 0x0A	; 10
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     418:	0f 2e       	mov	r0, r31
     41a:	f4 ed       	ldi	r31, 0xD4	; 212
     41c:	ef 2e       	mov	r14, r31
     41e:	f1 e0       	ldi	r31, 0x01	; 1
     420:	ff 2e       	mov	r15, r31
     422:	f0 2d       	mov	r31, r0
     424:	f7 01       	movw	r30, r14
     426:	82 81       	ldd	r24, Z+2	; 0x02
     428:	93 81       	ldd	r25, Z+3	; 0x03
     42a:	4a e0       	ldi	r20, 0x0A	; 10
     42c:	8e 01       	movw	r16, r28
     42e:	0f 5f       	subi	r16, 0xFF	; 255
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	b8 01       	movw	r22, r16
     434:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     438:	60 e0       	ldi	r22, 0x00	; 0
     43a:	89 e0       	ldi	r24, 0x09	; 9
     43c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     440:	62 e0       	ldi	r22, 0x02	; 2
     442:	c8 01       	movw	r24, r16
     444:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     448:	61 e0       	ldi	r22, 0x01	; 1
     44a:	83 e0       	ldi	r24, 0x03	; 3
     44c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     450:	66 e0       	ldi	r22, 0x06	; 6
     452:	81 e1       	ldi	r24, 0x11	; 17
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     45a:	f7 01       	movw	r30, r14
     45c:	84 81       	ldd	r24, Z+4	; 0x04
     45e:	95 81       	ldd	r25, Z+5	; 0x05
     460:	4a e0       	ldi	r20, 0x0A	; 10
     462:	b8 01       	movw	r22, r16
     464:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     468:	61 e0       	ldi	r22, 0x01	; 1
     46a:	89 e0       	ldi	r24, 0x09	; 9
     46c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     470:	62 e0       	ldi	r22, 0x02	; 2
     472:	c8 01       	movw	r24, r16
     474:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     478:	62 e0       	ldi	r22, 0x02	; 2
     47a:	83 e0       	ldi	r24, 0x03	; 3
     47c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     480:	64 e0       	ldi	r22, 0x04	; 4
     482:	80 e2       	ldi	r24, 0x20	; 32
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     48a:	f7 01       	movw	r30, r14
     48c:	86 81       	ldd	r24, Z+6	; 0x06
     48e:	97 81       	ldd	r25, Z+7	; 0x07
     490:	4a e0       	ldi	r20, 0x0A	; 10
     492:	b8 01       	movw	r22, r16
     494:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     498:	62 e0       	ldi	r22, 0x02	; 2
     49a:	89 e0       	ldi	r24, 0x09	; 9
     49c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     4a0:	f8 01       	movw	r30, r16
     4a2:	01 90       	ld	r0, Z+
     4a4:	00 20       	and	r0, r0
     4a6:	e9 f7       	brne	.-6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     4a8:	31 97       	sbiw	r30, 0x01	; 1
     4aa:	bf 01       	movw	r22, r30
     4ac:	60 1b       	sub	r22, r16
     4ae:	71 0b       	sbc	r23, r17
     4b0:	c8 01       	movw	r24, r16
     4b2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     4b6:	62 e0       	ldi	r22, 0x02	; 2
     4b8:	8c e0       	ldi	r24, 0x0C	; 12
     4ba:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	8e e1       	ldi	r24, 0x1E	; 30
     4c2:	91 e0       	ldi	r25, 0x01	; 1
     4c4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     4c8:	63 e0       	ldi	r22, 0x03	; 3
     4ca:	83 e0       	ldi	r24, 0x03	; 3
     4cc:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     4d0:	66 e0       	ldi	r22, 0x06	; 6
     4d2:	85 e2       	ldi	r24, 0x25	; 37
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     4da:	f7 01       	movw	r30, r14
     4dc:	80 85       	ldd	r24, Z+8	; 0x08
     4de:	91 85       	ldd	r25, Z+9	; 0x09
     4e0:	4a e0       	ldi	r20, 0x0A	; 10
     4e2:	b8 01       	movw	r22, r16
     4e4:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     4e8:	63 e0       	ldi	r22, 0x03	; 3
     4ea:	89 e0       	ldi	r24, 0x09	; 9
     4ec:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     4f0:	f8 01       	movw	r30, r16
     4f2:	01 90       	ld	r0, Z+
     4f4:	00 20       	and	r0, r0
     4f6:	e9 f7       	brne	.-6      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4f8:	31 97       	sbiw	r30, 0x01	; 1
     4fa:	bf 01       	movw	r22, r30
     4fc:	60 1b       	sub	r22, r16
     4fe:	71 0b       	sbc	r23, r17
     500:	c8 01       	movw	r24, r16
     502:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     506:	63 e0       	ldi	r22, 0x03	; 3
     508:	8c e0       	ldi	r24, 0x0C	; 12
     50a:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     50e:	61 e0       	ldi	r22, 0x01	; 1
     510:	8e e1       	ldi	r24, 0x1E	; 30
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     518:	7a c0       	rjmp	.+244    	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     51a:	60 e0       	ldi	r22, 0x00	; 0
     51c:	83 e0       	ldi	r24, 0x03	; 3
     51e:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     522:	66 e0       	ldi	r22, 0x06	; 6
     524:	81 e1       	ldi	r24, 0x11	; 17
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     52c:	0f 2e       	mov	r0, r31
     52e:	f4 ed       	ldi	r31, 0xD4	; 212
     530:	ef 2e       	mov	r14, r31
     532:	f1 e0       	ldi	r31, 0x01	; 1
     534:	ff 2e       	mov	r15, r31
     536:	f0 2d       	mov	r31, r0
     538:	f7 01       	movw	r30, r14
     53a:	84 81       	ldd	r24, Z+4	; 0x04
     53c:	95 81       	ldd	r25, Z+5	; 0x05
     53e:	4a e0       	ldi	r20, 0x0A	; 10
     540:	8e 01       	movw	r16, r28
     542:	0f 5f       	subi	r16, 0xFF	; 255
     544:	1f 4f       	sbci	r17, 0xFF	; 255
     546:	b8 01       	movw	r22, r16
     548:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	89 e0       	ldi	r24, 0x09	; 9
     550:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     554:	62 e0       	ldi	r22, 0x02	; 2
     556:	c8 01       	movw	r24, r16
     558:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     55c:	61 e0       	ldi	r22, 0x01	; 1
     55e:	83 e0       	ldi	r24, 0x03	; 3
     560:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     564:	64 e0       	ldi	r22, 0x04	; 4
     566:	80 e2       	ldi	r24, 0x20	; 32
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     56e:	f7 01       	movw	r30, r14
     570:	86 81       	ldd	r24, Z+6	; 0x06
     572:	97 81       	ldd	r25, Z+7	; 0x07
     574:	4a e0       	ldi	r20, 0x0A	; 10
     576:	b8 01       	movw	r22, r16
     578:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     57c:	61 e0       	ldi	r22, 0x01	; 1
     57e:	89 e0       	ldi	r24, 0x09	; 9
     580:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     584:	f8 01       	movw	r30, r16
     586:	01 90       	ld	r0, Z+
     588:	00 20       	and	r0, r0
     58a:	e9 f7       	brne	.-6      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
     58c:	31 97       	sbiw	r30, 0x01	; 1
     58e:	bf 01       	movw	r22, r30
     590:	60 1b       	sub	r22, r16
     592:	71 0b       	sbc	r23, r17
     594:	c8 01       	movw	r24, r16
     596:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     59a:	61 e0       	ldi	r22, 0x01	; 1
     59c:	8c e0       	ldi	r24, 0x0C	; 12
     59e:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	8e e1       	ldi	r24, 0x1E	; 30
     5a6:	91 e0       	ldi	r25, 0x01	; 1
     5a8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     5ac:	62 e0       	ldi	r22, 0x02	; 2
     5ae:	83 e0       	ldi	r24, 0x03	; 3
     5b0:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     5b4:	66 e0       	ldi	r22, 0x06	; 6
     5b6:	85 e2       	ldi	r24, 0x25	; 37
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     5be:	f7 01       	movw	r30, r14
     5c0:	80 85       	ldd	r24, Z+8	; 0x08
     5c2:	91 85       	ldd	r25, Z+9	; 0x09
     5c4:	4a e0       	ldi	r20, 0x0A	; 10
     5c6:	b8 01       	movw	r22, r16
     5c8:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     5cc:	62 e0       	ldi	r22, 0x02	; 2
     5ce:	89 e0       	ldi	r24, 0x09	; 9
     5d0:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     5d4:	f8 01       	movw	r30, r16
     5d6:	01 90       	ld	r0, Z+
     5d8:	00 20       	and	r0, r0
     5da:	e9 f7       	brne	.-6      	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
     5dc:	31 97       	sbiw	r30, 0x01	; 1
     5de:	bf 01       	movw	r22, r30
     5e0:	60 1b       	sub	r22, r16
     5e2:	71 0b       	sbc	r23, r17
     5e4:	c8 01       	movw	r24, r16
     5e6:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     5ea:	62 e0       	ldi	r22, 0x02	; 2
     5ec:	8c e0       	ldi	r24, 0x0C	; 12
     5ee:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     5f2:	61 e0       	ldi	r22, 0x01	; 1
     5f4:	8e e1       	ldi	r24, 0x1E	; 30
     5f6:	91 e0       	ldi	r25, 0x01	; 1
     5f8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     5fc:	63 e0       	ldi	r22, 0x03	; 3
     5fe:	83 e0       	ldi	r24, 0x03	; 3
     600:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     604:	66 e0       	ldi	r22, 0x06	; 6
     606:	8c e2       	ldi	r24, 0x2C	; 44
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	08 95       	ret

00000622 <displayThresholdsMenu>:
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	00 d0       	rcall	.+0      	; 0x630 <displayThresholdsMenu+0xe>
     630:	1f 92       	push	r1
     632:	cd b7       	in	r28, 0x3d	; 61
     634:	de b7       	in	r29, 0x3e	; 62
     636:	8c 01       	movw	r16, r24
     638:	7b 01       	movw	r14, r22
     63a:	84 30       	cpi	r24, 0x04	; 4
     63c:	91 05       	cpc	r25, r1
     63e:	89 f1       	breq	.+98     	; 0x6a2 <displayThresholdsMenu+0x80>
     640:	1c f4       	brge	.+6      	; 0x648 <displayThresholdsMenu+0x26>
     642:	99 23       	and	r25, r25
     644:	4c f4       	brge	.+18     	; 0x658 <displayThresholdsMenu+0x36>
     646:	9b c0       	rjmp	.+310    	; 0x77e <displayThresholdsMenu+0x15c>
     648:	85 30       	cpi	r24, 0x05	; 5
     64a:	91 05       	cpc	r25, r1
     64c:	09 f4       	brne	.+2      	; 0x650 <displayThresholdsMenu+0x2e>
     64e:	4e c0       	rjmp	.+156    	; 0x6ec <displayThresholdsMenu+0xca>
     650:	06 97       	sbiw	r24, 0x06	; 6
     652:	09 f4       	brne	.+2      	; 0x656 <displayThresholdsMenu+0x34>
     654:	70 c0       	rjmp	.+224    	; 0x736 <displayThresholdsMenu+0x114>
     656:	93 c0       	rjmp	.+294    	; 0x77e <displayThresholdsMenu+0x15c>
     658:	60 e0       	ldi	r22, 0x00	; 0
     65a:	83 e0       	ldi	r24, 0x03	; 3
     65c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     660:	66 e0       	ldi	r22, 0x06	; 6
     662:	83 e0       	ldi	r24, 0x03	; 3
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	83 e0       	ldi	r24, 0x03	; 3
     66e:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     672:	66 e0       	ldi	r22, 0x06	; 6
     674:	8a e0       	ldi	r24, 0x0A	; 10
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     67c:	62 e0       	ldi	r22, 0x02	; 2
     67e:	83 e0       	ldi	r24, 0x03	; 3
     680:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     684:	66 e0       	ldi	r22, 0x06	; 6
     686:	81 e1       	ldi	r24, 0x11	; 17
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     68e:	63 e0       	ldi	r22, 0x03	; 3
     690:	83 e0       	ldi	r24, 0x03	; 3
     692:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     696:	64 e0       	ldi	r22, 0x04	; 4
     698:	80 e2       	ldi	r24, 0x20	; 32
     69a:	91 e0       	ldi	r25, 0x01	; 1
     69c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6a0:	6e c0       	rjmp	.+220    	; 0x77e <displayThresholdsMenu+0x15c>
     6a2:	60 e0       	ldi	r22, 0x00	; 0
     6a4:	83 e0       	ldi	r24, 0x03	; 3
     6a6:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     6aa:	66 e0       	ldi	r22, 0x06	; 6
     6ac:	8a e0       	ldi	r24, 0x0A	; 10
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6b4:	61 e0       	ldi	r22, 0x01	; 1
     6b6:	83 e0       	ldi	r24, 0x03	; 3
     6b8:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     6bc:	66 e0       	ldi	r22, 0x06	; 6
     6be:	81 e1       	ldi	r24, 0x11	; 17
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6c6:	62 e0       	ldi	r22, 0x02	; 2
     6c8:	83 e0       	ldi	r24, 0x03	; 3
     6ca:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     6ce:	64 e0       	ldi	r22, 0x04	; 4
     6d0:	80 e2       	ldi	r24, 0x20	; 32
     6d2:	91 e0       	ldi	r25, 0x01	; 1
     6d4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6d8:	63 e0       	ldi	r22, 0x03	; 3
     6da:	83 e0       	ldi	r24, 0x03	; 3
     6dc:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     6e0:	66 e0       	ldi	r22, 0x06	; 6
     6e2:	85 e2       	ldi	r24, 0x25	; 37
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6ea:	49 c0       	rjmp	.+146    	; 0x77e <displayThresholdsMenu+0x15c>
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	83 e0       	ldi	r24, 0x03	; 3
     6f0:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     6f4:	66 e0       	ldi	r22, 0x06	; 6
     6f6:	81 e1       	ldi	r24, 0x11	; 17
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     6fe:	61 e0       	ldi	r22, 0x01	; 1
     700:	83 e0       	ldi	r24, 0x03	; 3
     702:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     706:	64 e0       	ldi	r22, 0x04	; 4
     708:	80 e2       	ldi	r24, 0x20	; 32
     70a:	91 e0       	ldi	r25, 0x01	; 1
     70c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     710:	62 e0       	ldi	r22, 0x02	; 2
     712:	83 e0       	ldi	r24, 0x03	; 3
     714:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     718:	66 e0       	ldi	r22, 0x06	; 6
     71a:	85 e2       	ldi	r24, 0x25	; 37
     71c:	91 e0       	ldi	r25, 0x01	; 1
     71e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     722:	63 e0       	ldi	r22, 0x03	; 3
     724:	83 e0       	ldi	r24, 0x03	; 3
     726:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     72a:	66 e0       	ldi	r22, 0x06	; 6
     72c:	83 e3       	ldi	r24, 0x33	; 51
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     734:	24 c0       	rjmp	.+72     	; 0x77e <displayThresholdsMenu+0x15c>
     736:	60 e0       	ldi	r22, 0x00	; 0
     738:	83 e0       	ldi	r24, 0x03	; 3
     73a:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     73e:	64 e0       	ldi	r22, 0x04	; 4
     740:	80 e2       	ldi	r24, 0x20	; 32
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     748:	61 e0       	ldi	r22, 0x01	; 1
     74a:	83 e0       	ldi	r24, 0x03	; 3
     74c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     750:	66 e0       	ldi	r22, 0x06	; 6
     752:	85 e2       	ldi	r24, 0x25	; 37
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     75a:	62 e0       	ldi	r22, 0x02	; 2
     75c:	83 e0       	ldi	r24, 0x03	; 3
     75e:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     762:	66 e0       	ldi	r22, 0x06	; 6
     764:	83 e3       	ldi	r24, 0x33	; 51
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     76c:	63 e0       	ldi	r22, 0x03	; 3
     76e:	83 e0       	ldi	r24, 0x03	; 3
     770:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     774:	66 e0       	ldi	r22, 0x06	; 6
     776:	8c e2       	ldi	r24, 0x2C	; 44
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     77e:	02 30       	cpi	r16, 0x02	; 2
     780:	11 05       	cpc	r17, r1
     782:	09 f4       	brne	.+2      	; 0x786 <displayThresholdsMenu+0x164>
     784:	55 c0       	rjmp	.+170    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     786:	3c f4       	brge	.+14     	; 0x796 <displayThresholdsMenu+0x174>
     788:	01 15       	cp	r16, r1
     78a:	11 05       	cpc	r17, r1
     78c:	79 f0       	breq	.+30     	; 0x7ac <displayThresholdsMenu+0x18a>
     78e:	01 30       	cpi	r16, 0x01	; 1
     790:	11 05       	cpc	r17, r1
     792:	69 f1       	breq	.+90     	; 0x7ee <displayThresholdsMenu+0x1cc>
     794:	d0 c0       	rjmp	.+416    	; 0x936 <__stack+0x37>
     796:	04 30       	cpi	r16, 0x04	; 4
     798:	11 05       	cpc	r17, r1
     79a:	09 f4       	brne	.+2      	; 0x79e <displayThresholdsMenu+0x17c>
     79c:	8b c0       	rjmp	.+278    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     79e:	0c f4       	brge	.+2      	; 0x7a2 <displayThresholdsMenu+0x180>
     7a0:	68 c0       	rjmp	.+208    	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     7a2:	05 30       	cpi	r16, 0x05	; 5
     7a4:	11 05       	cpc	r17, r1
     7a6:	09 f4       	brne	.+2      	; 0x7aa <displayThresholdsMenu+0x188>
     7a8:	a6 c0       	rjmp	.+332    	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
     7aa:	c5 c0       	rjmp	.+394    	; 0x936 <__stack+0x37>
     7ac:	e5 ec       	ldi	r30, 0xC5	; 197
     7ae:	f1 e0       	ldi	r31, 0x01	; 1
     7b0:	80 81       	ld	r24, Z
     7b2:	91 81       	ldd	r25, Z+1	; 0x01
     7b4:	e8 0e       	add	r14, r24
     7b6:	f9 1e       	adc	r15, r25
     7b8:	f1 82       	std	Z+1, r15	; 0x01
     7ba:	e0 82       	st	Z, r14
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01
     7c0:	4a e0       	ldi	r20, 0x0A	; 10
     7c2:	8e 01       	movw	r16, r28
     7c4:	0f 5f       	subi	r16, 0xFF	; 255
     7c6:	1f 4f       	sbci	r17, 0xFF	; 255
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	89 e0       	ldi	r24, 0x09	; 9
     7d2:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     7d6:	f8 01       	movw	r30, r16
     7d8:	01 90       	ld	r0, Z+
     7da:	00 20       	and	r0, r0
     7dc:	e9 f7       	brne	.-6      	; 0x7d8 <displayThresholdsMenu+0x1b6>
     7de:	31 97       	sbiw	r30, 0x01	; 1
     7e0:	bf 01       	movw	r22, r30
     7e2:	60 1b       	sub	r22, r16
     7e4:	71 0b       	sbc	r23, r17
     7e6:	c8 01       	movw	r24, r16
     7e8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     7ec:	a4 c0       	rjmp	.+328    	; 0x936 <__stack+0x37>
     7ee:	e5 ec       	ldi	r30, 0xC5	; 197
     7f0:	f1 e0       	ldi	r31, 0x01	; 1
     7f2:	82 81       	ldd	r24, Z+2	; 0x02
     7f4:	93 81       	ldd	r25, Z+3	; 0x03
     7f6:	e8 0e       	add	r14, r24
     7f8:	f9 1e       	adc	r15, r25
     7fa:	f3 82       	std	Z+3, r15	; 0x03
     7fc:	e2 82       	std	Z+2, r14	; 0x02
     7fe:	82 81       	ldd	r24, Z+2	; 0x02
     800:	93 81       	ldd	r25, Z+3	; 0x03
     802:	4a e0       	ldi	r20, 0x0A	; 10
     804:	8e 01       	movw	r16, r28
     806:	0f 5f       	subi	r16, 0xFF	; 255
     808:	1f 4f       	sbci	r17, 0xFF	; 255
     80a:	b8 01       	movw	r22, r16
     80c:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     810:	61 e0       	ldi	r22, 0x01	; 1
     812:	89 e0       	ldi	r24, 0x09	; 9
     814:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     818:	f8 01       	movw	r30, r16
     81a:	01 90       	ld	r0, Z+
     81c:	00 20       	and	r0, r0
     81e:	e9 f7       	brne	.-6      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     820:	31 97       	sbiw	r30, 0x01	; 1
     822:	bf 01       	movw	r22, r30
     824:	60 1b       	sub	r22, r16
     826:	71 0b       	sbc	r23, r17
     828:	c8 01       	movw	r24, r16
     82a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     82e:	83 c0       	rjmp	.+262    	; 0x936 <__stack+0x37>
     830:	e5 ec       	ldi	r30, 0xC5	; 197
     832:	f1 e0       	ldi	r31, 0x01	; 1
     834:	84 81       	ldd	r24, Z+4	; 0x04
     836:	95 81       	ldd	r25, Z+5	; 0x05
     838:	e8 0e       	add	r14, r24
     83a:	f9 1e       	adc	r15, r25
     83c:	f5 82       	std	Z+5, r15	; 0x05
     83e:	e4 82       	std	Z+4, r14	; 0x04
     840:	84 81       	ldd	r24, Z+4	; 0x04
     842:	95 81       	ldd	r25, Z+5	; 0x05
     844:	4a e0       	ldi	r20, 0x0A	; 10
     846:	8e 01       	movw	r16, r28
     848:	0f 5f       	subi	r16, 0xFF	; 255
     84a:	1f 4f       	sbci	r17, 0xFF	; 255
     84c:	b8 01       	movw	r22, r16
     84e:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     852:	62 e0       	ldi	r22, 0x02	; 2
     854:	89 e0       	ldi	r24, 0x09	; 9
     856:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     85a:	f8 01       	movw	r30, r16
     85c:	01 90       	ld	r0, Z+
     85e:	00 20       	and	r0, r0
     860:	e9 f7       	brne	.-6      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     862:	31 97       	sbiw	r30, 0x01	; 1
     864:	bf 01       	movw	r22, r30
     866:	60 1b       	sub	r22, r16
     868:	71 0b       	sbc	r23, r17
     86a:	c8 01       	movw	r24, r16
     86c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     870:	62 c0       	rjmp	.+196    	; 0x936 <__stack+0x37>
     872:	e5 ec       	ldi	r30, 0xC5	; 197
     874:	f1 e0       	ldi	r31, 0x01	; 1
     876:	86 81       	ldd	r24, Z+6	; 0x06
     878:	97 81       	ldd	r25, Z+7	; 0x07
     87a:	e8 0e       	add	r14, r24
     87c:	f9 1e       	adc	r15, r25
     87e:	f7 82       	std	Z+7, r15	; 0x07
     880:	e6 82       	std	Z+6, r14	; 0x06
     882:	86 81       	ldd	r24, Z+6	; 0x06
     884:	97 81       	ldd	r25, Z+7	; 0x07
     886:	4a e0       	ldi	r20, 0x0A	; 10
     888:	8e 01       	movw	r16, r28
     88a:	0f 5f       	subi	r16, 0xFF	; 255
     88c:	1f 4f       	sbci	r17, 0xFF	; 255
     88e:	b8 01       	movw	r22, r16
     890:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     894:	63 e0       	ldi	r22, 0x03	; 3
     896:	89 e0       	ldi	r24, 0x09	; 9
     898:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     89c:	f8 01       	movw	r30, r16
     89e:	01 90       	ld	r0, Z+
     8a0:	00 20       	and	r0, r0
     8a2:	e9 f7       	brne	.-6      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     8a4:	31 97       	sbiw	r30, 0x01	; 1
     8a6:	bf 01       	movw	r22, r30
     8a8:	60 1b       	sub	r22, r16
     8aa:	71 0b       	sbc	r23, r17
     8ac:	c8 01       	movw	r24, r16
     8ae:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     8b2:	41 c0       	rjmp	.+130    	; 0x936 <__stack+0x37>
     8b4:	e5 ec       	ldi	r30, 0xC5	; 197
     8b6:	f1 e0       	ldi	r31, 0x01	; 1
     8b8:	80 85       	ldd	r24, Z+8	; 0x08
     8ba:	91 85       	ldd	r25, Z+9	; 0x09
     8bc:	e8 0e       	add	r14, r24
     8be:	f9 1e       	adc	r15, r25
     8c0:	f1 86       	std	Z+9, r15	; 0x09
     8c2:	e0 86       	std	Z+8, r14	; 0x08
     8c4:	80 85       	ldd	r24, Z+8	; 0x08
     8c6:	91 85       	ldd	r25, Z+9	; 0x09
     8c8:	4a e0       	ldi	r20, 0x0A	; 10
     8ca:	8e 01       	movw	r16, r28
     8cc:	0f 5f       	subi	r16, 0xFF	; 255
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	b8 01       	movw	r22, r16
     8d2:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     8d6:	63 e0       	ldi	r22, 0x03	; 3
     8d8:	89 e0       	ldi	r24, 0x09	; 9
     8da:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     8de:	f8 01       	movw	r30, r16
     8e0:	01 90       	ld	r0, Z+
     8e2:	00 20       	and	r0, r0
     8e4:	e9 f7       	brne	.-6      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	bf 01       	movw	r22, r30
     8ea:	60 1b       	sub	r22, r16
     8ec:	71 0b       	sbc	r23, r17
     8ee:	c8 01       	movw	r24, r16
     8f0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     8f4:	20 c0       	rjmp	.+64     	; 0x936 <__stack+0x37>
     8f6:	e5 ec       	ldi	r30, 0xC5	; 197
     8f8:	f1 e0       	ldi	r31, 0x01	; 1
     8fa:	82 85       	ldd	r24, Z+10	; 0x0a
     8fc:	93 85       	ldd	r25, Z+11	; 0x0b
     8fe:	e8 0e       	add	r14, r24
     900:	f9 1e       	adc	r15, r25
     902:	f3 86       	std	Z+11, r15	; 0x0b
     904:	e2 86       	std	Z+10, r14	; 0x0a
     906:	82 85       	ldd	r24, Z+10	; 0x0a
     908:	93 85       	ldd	r25, Z+11	; 0x0b
     90a:	4a e0       	ldi	r20, 0x0A	; 10
     90c:	8e 01       	movw	r16, r28
     90e:	0f 5f       	subi	r16, 0xFF	; 255
     910:	1f 4f       	sbci	r17, 0xFF	; 255
     912:	b8 01       	movw	r22, r16
     914:	0e 94 9c 09 	call	0x1338	; 0x1338 <__itoa_ncheck>
     918:	63 e0       	ldi	r22, 0x03	; 3
     91a:	89 e0       	ldi	r24, 0x09	; 9
     91c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     920:	f8 01       	movw	r30, r16
     922:	01 90       	ld	r0, Z+
     924:	00 20       	and	r0, r0
     926:	e9 f7       	brne	.-6      	; 0x922 <__stack+0x23>
     928:	31 97       	sbiw	r30, 0x01	; 1
     92a:	bf 01       	movw	r22, r30
     92c:	60 1b       	sub	r22, r16
     92e:	71 0b       	sbc	r23, r17
     930:	c8 01       	movw	r24, r16
     932:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     936:	0f 90       	pop	r0
     938:	0f 90       	pop	r0
     93a:	0f 90       	pop	r0
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	ef 90       	pop	r14
     948:	08 95       	ret

0000094a <displayMenu>:
     94a:	cf 92       	push	r12
     94c:	df 92       	push	r13
     94e:	ff 92       	push	r15
     950:	0f 93       	push	r16
     952:	1f 93       	push	r17
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	8c 01       	movw	r16, r24
     95a:	6a 01       	movw	r12, r20
     95c:	eb 01       	movw	r28, r22
     95e:	21 97       	sbiw	r28, 0x01	; 1
     960:	c4 30       	cpi	r28, 0x04	; 4
     962:	d1 05       	cpc	r29, r1
     964:	14 f4       	brge	.+4      	; 0x96a <displayMenu+0x20>
     966:	fc 2e       	mov	r15, r28
     968:	04 c0       	rjmp	.+8      	; 0x972 <displayMenu+0x28>
     96a:	0f 2e       	mov	r0, r31
     96c:	f3 e0       	ldi	r31, 0x03	; 3
     96e:	ff 2e       	mov	r15, r31
     970:	f0 2d       	mov	r31, r0
     972:	0e 94 0e 01 	call	0x21c	; 0x21c <LCDclr>
     976:	6f 2d       	mov	r22, r15
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     97e:	63 e0       	ldi	r22, 0x03	; 3
     980:	8a e3       	ldi	r24, 0x3A	; 58
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     988:	01 30       	cpi	r16, 0x01	; 1
     98a:	11 05       	cpc	r17, r1
     98c:	39 f1       	breq	.+78     	; 0x9dc <displayMenu+0x92>
     98e:	1c f4       	brge	.+6      	; 0x996 <displayMenu+0x4c>
     990:	01 2b       	or	r16, r17
     992:	41 f0       	breq	.+16     	; 0x9a4 <displayMenu+0x5a>
     994:	48 c0       	rjmp	.+144    	; 0xa26 <displayMenu+0xdc>
     996:	02 30       	cpi	r16, 0x02	; 2
     998:	11 05       	cpc	r17, r1
     99a:	21 f1       	breq	.+72     	; 0x9e4 <displayMenu+0x9a>
     99c:	03 30       	cpi	r16, 0x03	; 3
     99e:	11 05       	cpc	r17, r1
     9a0:	31 f1       	breq	.+76     	; 0x9ee <displayMenu+0xa4>
     9a2:	41 c0       	rjmp	.+130    	; 0xa26 <displayMenu+0xdc>
     9a4:	60 e0       	ldi	r22, 0x00	; 0
     9a6:	83 e0       	ldi	r24, 0x03	; 3
     9a8:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     9ac:	6f e0       	ldi	r22, 0x0F	; 15
     9ae:	8e e3       	ldi	r24, 0x3E	; 62
     9b0:	91 e0       	ldi	r25, 0x01	; 1
     9b2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	83 e0       	ldi	r24, 0x03	; 3
     9ba:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     9be:	65 e0       	ldi	r22, 0x05	; 5
     9c0:	8e e4       	ldi	r24, 0x4E	; 78
     9c2:	91 e0       	ldi	r25, 0x01	; 1
     9c4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     9c8:	62 e0       	ldi	r22, 0x02	; 2
     9ca:	83 e0       	ldi	r24, 0x03	; 3
     9cc:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     9d0:	6a e0       	ldi	r22, 0x0A	; 10
     9d2:	84 e5       	ldi	r24, 0x54	; 84
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     9da:	7d c0       	rjmp	.+250    	; 0xad6 <displayMenu+0x18c>
     9dc:	ce 01       	movw	r24, r28
     9de:	0e 94 73 01 	call	0x2e6	; 0x2e6 <displayReadingMenu>
     9e2:	79 c0       	rjmp	.+242    	; 0xad6 <displayMenu+0x18c>
     9e4:	b6 01       	movw	r22, r12
     9e6:	ce 01       	movw	r24, r28
     9e8:	0e 94 11 03 	call	0x622	; 0x622 <displayThresholdsMenu>
     9ec:	74 c0       	rjmp	.+232    	; 0xad6 <displayMenu+0x18c>
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	83 e0       	ldi	r24, 0x03	; 3
     9f2:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     9f6:	68 e0       	ldi	r22, 0x08	; 8
     9f8:	8f e5       	ldi	r24, 0x5F	; 95
     9fa:	91 e0       	ldi	r25, 0x01	; 1
     9fc:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a00:	61 e0       	ldi	r22, 0x01	; 1
     a02:	83 e0       	ldi	r24, 0x03	; 3
     a04:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a08:	64 e0       	ldi	r22, 0x04	; 4
     a0a:	88 e6       	ldi	r24, 0x68	; 104
     a0c:	91 e0       	ldi	r25, 0x01	; 1
     a0e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a12:	62 e0       	ldi	r22, 0x02	; 2
     a14:	83 e0       	ldi	r24, 0x03	; 3
     a16:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a1a:	66 e0       	ldi	r22, 0x06	; 6
     a1c:	8c e2       	ldi	r24, 0x2C	; 44
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a24:	58 c0       	rjmp	.+176    	; 0xad6 <displayMenu+0x18c>
     a26:	0e 94 0e 01 	call	0x21c	; 0x21c <LCDclr>
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	80 e0       	ldi	r24, 0x00	; 0
     a2e:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a32:	65 e0       	ldi	r22, 0x05	; 5
     a34:	8d e6       	ldi	r24, 0x6D	; 109
     a36:	91 e0       	ldi	r25, 0x01	; 1
     a38:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a3c:	2f ef       	ldi	r18, 0xFF	; 255
     a3e:	89 e6       	ldi	r24, 0x69	; 105
     a40:	98 e1       	ldi	r25, 0x18	; 24
     a42:	21 50       	subi	r18, 0x01	; 1
     a44:	80 40       	sbci	r24, 0x00	; 0
     a46:	90 40       	sbci	r25, 0x00	; 0
     a48:	e1 f7       	brne	.-8      	; 0xa42 <displayMenu+0xf8>
     a4a:	00 c0       	rjmp	.+0      	; 0xa4c <displayMenu+0x102>
     a4c:	00 00       	nop
     a4e:	67 e0       	ldi	r22, 0x07	; 7
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a56:	61 e0       	ldi	r22, 0x01	; 1
     a58:	83 e7       	ldi	r24, 0x73	; 115
     a5a:	91 e0       	ldi	r25, 0x01	; 1
     a5c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a60:	2f ef       	ldi	r18, 0xFF	; 255
     a62:	89 e6       	ldi	r24, 0x69	; 105
     a64:	98 e1       	ldi	r25, 0x18	; 24
     a66:	21 50       	subi	r18, 0x01	; 1
     a68:	80 40       	sbci	r24, 0x00	; 0
     a6a:	90 40       	sbci	r25, 0x00	; 0
     a6c:	e1 f7       	brne	.-8      	; 0xa66 <displayMenu+0x11c>
     a6e:	00 c0       	rjmp	.+0      	; 0xa70 <displayMenu+0x126>
     a70:	00 00       	nop
     a72:	68 e0       	ldi	r22, 0x08	; 8
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a7a:	61 e0       	ldi	r22, 0x01	; 1
     a7c:	83 e7       	ldi	r24, 0x73	; 115
     a7e:	91 e0       	ldi	r25, 0x01	; 1
     a80:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     a84:	2f ef       	ldi	r18, 0xFF	; 255
     a86:	89 e6       	ldi	r24, 0x69	; 105
     a88:	98 e1       	ldi	r25, 0x18	; 24
     a8a:	21 50       	subi	r18, 0x01	; 1
     a8c:	80 40       	sbci	r24, 0x00	; 0
     a8e:	90 40       	sbci	r25, 0x00	; 0
     a90:	e1 f7       	brne	.-8      	; 0xa8a <displayMenu+0x140>
     a92:	00 c0       	rjmp	.+0      	; 0xa94 <displayMenu+0x14a>
     a94:	00 00       	nop
     a96:	69 e0       	ldi	r22, 0x09	; 9
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_locate>
     a9e:	61 e0       	ldi	r22, 0x01	; 1
     aa0:	83 e7       	ldi	r24, 0x73	; 115
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCDstring>
     aa8:	2f ef       	ldi	r18, 0xFF	; 255
     aaa:	89 e6       	ldi	r24, 0x69	; 105
     aac:	98 e1       	ldi	r25, 0x18	; 24
     aae:	21 50       	subi	r18, 0x01	; 1
     ab0:	80 40       	sbci	r24, 0x00	; 0
     ab2:	90 40       	sbci	r25, 0x00	; 0
     ab4:	e1 f7       	brne	.-8      	; 0xaae <displayMenu+0x164>
     ab6:	00 c0       	rjmp	.+0      	; 0xab8 <displayMenu+0x16e>
     ab8:	00 00       	nop
     aba:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <menuFlag+0x1>
     abe:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <menuFlag>
     ac2:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     ac6:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     aca:	40 e0       	ldi	r20, 0x00	; 0
     acc:	50 e0       	ldi	r21, 0x00	; 0
     ace:	61 e0       	ldi	r22, 0x01	; 1
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	1f 91       	pop	r17
     adc:	0f 91       	pop	r16
     ade:	ff 90       	pop	r15
     ae0:	df 90       	pop	r13
     ae2:	cf 90       	pop	r12
     ae4:	08 95       	ret

00000ae6 <USART_Init>:
     ae6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     aea:	8f ec       	ldi	r24, 0xCF	; 207
     aec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     af0:	82 e0       	ldi	r24, 0x02	; 2
     af2:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     af6:	88 e9       	ldi	r24, 0x98	; 152
     af8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     afc:	86 e0       	ldi	r24, 0x06	; 6
     afe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     b02:	08 95       	ret

00000b04 <ADC_init>:
     b04:	ea e7       	ldi	r30, 0x7A	; 122
     b06:	f0 e0       	ldi	r31, 0x00	; 0
     b08:	80 81       	ld	r24, Z
     b0a:	80 68       	ori	r24, 0x80	; 128
     b0c:	80 83       	st	Z, r24
     b0e:	80 81       	ld	r24, Z
     b10:	87 60       	ori	r24, 0x07	; 7
     b12:	80 83       	st	Z, r24
     b14:	80 81       	ld	r24, Z
     b16:	80 64       	ori	r24, 0x40	; 64
     b18:	80 83       	st	Z, r24
     b1a:	ec e7       	ldi	r30, 0x7C	; 124
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	80 81       	ld	r24, Z
     b20:	80 64       	ori	r24, 0x40	; 64
     b22:	80 83       	st	Z, r24
     b24:	08 95       	ret

00000b26 <adc_read>:
     b26:	87 70       	andi	r24, 0x07	; 7
     b28:	ec e7       	ldi	r30, 0x7C	; 124
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	90 81       	ld	r25, Z
     b2e:	98 7f       	andi	r25, 0xF8	; 248
     b30:	89 2b       	or	r24, r25
     b32:	80 83       	st	Z, r24
     b34:	ea e7       	ldi	r30, 0x7A	; 122
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	80 81       	ld	r24, Z
     b3a:	80 64       	ori	r24, 0x40	; 64
     b3c:	80 83       	st	Z, r24
     b3e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     b42:	86 fd       	sbrc	r24, 6
     b44:	fc cf       	rjmp	.-8      	; 0xb3e <adc_read+0x18>
     b46:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     b4a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     b4e:	08 95       	ret

00000b50 <__vector_18>:
     b50:	1f 92       	push	r1
     b52:	0f 92       	push	r0
     b54:	0f b6       	in	r0, 0x3f	; 63
     b56:	0f 92       	push	r0
     b58:	11 24       	eor	r1, r1
     b5a:	8f 93       	push	r24
     b5c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     b60:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <globalchar>
     b64:	8f 91       	pop	r24
     b66:	0f 90       	pop	r0
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	0f 90       	pop	r0
     b6c:	1f 90       	pop	r1
     b6e:	18 95       	reti

00000b70 <convertToPercentages>:
     b70:	bc 01       	movw	r22, r24
     b72:	99 0f       	add	r25, r25
     b74:	88 0b       	sbc	r24, r24
     b76:	99 0b       	sbc	r25, r25
     b78:	0e 94 a3 08 	call	0x1146	; 0x1146 <__floatsisf>
     b7c:	27 ef       	ldi	r18, 0xF7	; 247
     b7e:	31 e0       	ldi	r19, 0x01	; 1
     b80:	48 ec       	ldi	r20, 0xC8	; 200
     b82:	5d e3       	ldi	r21, 0x3D	; 61
     b84:	0e 94 2f 09 	call	0x125e	; 0x125e <__mulsf3>
     b88:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fixsfsi>
     b8c:	cb 01       	movw	r24, r22
     b8e:	08 95       	ret

00000b90 <RTCinit>:
     b90:	0e 94 79 00 	call	0xf2	; 0xf2 <i2cInit>
     b94:	0e 94 85 00 	call	0x10a	; 0x10a <i2cStart>
     b98:	80 ed       	ldi	r24, 0xD0	; 208
     b9a:	0e 94 93 00 	call	0x126	; 0x126 <i2cSendData>
     b9e:	87 e0       	ldi	r24, 0x07	; 7
     ba0:	0e 94 93 00 	call	0x126	; 0x126 <i2cSendData>
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	0e 94 93 00 	call	0x126	; 0x126 <i2cSendData>
     baa:	0e 94 8b 00 	call	0x116	; 0x116 <i2cStop>
     bae:	08 95       	ret

00000bb0 <buttonDown>:
     bb0:	18 99       	sbic	0x03, 0	; 3
     bb2:	51 c0       	rjmp	.+162    	; 0xc56 <buttonDown+0xa6>
     bb4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     bb8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     bbc:	01 96       	adiw	r24, 0x01	; 1
     bbe:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     bc2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     bc6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     bca:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     bce:	04 97       	sbiw	r24, 0x04	; 4
     bd0:	94 f0       	brlt	.+36     	; 0xbf6 <buttonDown+0x46>
     bd2:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     bd6:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     bda:	89 2b       	or	r24, r25
     bdc:	31 f0       	breq	.+12     	; 0xbea <buttonDown+0x3a>
     bde:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     be2:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     be6:	03 97       	sbiw	r24, 0x03	; 3
     be8:	31 f4       	brne	.+12     	; 0xbf6 <buttonDown+0x46>
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     bf2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     bf6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     bfa:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     bfe:	07 97       	sbiw	r24, 0x07	; 7
     c00:	64 f0       	brlt	.+24     	; 0xc1a <buttonDown+0x6a>
     c02:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     c06:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     c0a:	01 97       	sbiw	r24, 0x01	; 1
     c0c:	31 f4       	brne	.+12     	; 0xc1a <buttonDown+0x6a>
     c0e:	81 e0       	ldi	r24, 0x01	; 1
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     c16:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     c1a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     c1e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     c22:	08 97       	sbiw	r24, 0x08	; 8
     c24:	64 f0       	brlt	.+24     	; 0xc3e <buttonDown+0x8e>
     c26:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     c2a:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     c2e:	02 97       	sbiw	r24, 0x02	; 2
     c30:	31 f4       	brne	.+12     	; 0xc3e <buttonDown+0x8e>
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     c3a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     c3e:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     c42:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     c46:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     c4a:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     c4e:	40 e0       	ldi	r20, 0x00	; 0
     c50:	50 e0       	ldi	r21, 0x00	; 0
     c52:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     c56:	08 95       	ret

00000c58 <buttonUp>:
     c58:	4e 99       	sbic	0x09, 6	; 9
     c5a:	47 c0       	rjmp	.+142    	; 0xcea <buttonUp+0x92>
     c5c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     c60:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     c6a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     c6e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     c72:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     c76:	18 16       	cp	r1, r24
     c78:	19 06       	cpc	r1, r25
     c7a:	94 f0       	brlt	.+36     	; 0xca0 <buttonUp+0x48>
     c7c:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     c80:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     c84:	89 2b       	or	r24, r25
     c86:	31 f0       	breq	.+12     	; 0xc94 <buttonUp+0x3c>
     c88:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     c8c:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     c90:	03 97       	sbiw	r24, 0x03	; 3
     c92:	31 f4       	brne	.+12     	; 0xca0 <buttonUp+0x48>
     c94:	83 e0       	ldi	r24, 0x03	; 3
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     c9c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     ca0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     ca4:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     ca8:	18 16       	cp	r1, r24
     caa:	19 06       	cpc	r1, r25
     cac:	94 f0       	brlt	.+36     	; 0xcd2 <buttonUp+0x7a>
     cae:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     cb2:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     cb6:	01 97       	sbiw	r24, 0x01	; 1
     cb8:	31 f0       	breq	.+12     	; 0xcc6 <buttonUp+0x6e>
     cba:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     cbe:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     cc2:	02 97       	sbiw	r24, 0x02	; 2
     cc4:	31 f4       	brne	.+12     	; 0xcd2 <buttonUp+0x7a>
     cc6:	87 e0       	ldi	r24, 0x07	; 7
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     cce:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     cd2:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     cd6:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     cda:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     cde:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     ce2:	40 e0       	ldi	r20, 0x00	; 0
     ce4:	50 e0       	ldi	r21, 0x00	; 0
     ce6:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     cea:	08 95       	ret

00000cec <buttonEnter>:
     cec:	4f 99       	sbic	0x09, 7	; 9
     cee:	86 c0       	rjmp	.+268    	; 0xdfc <buttonEnter+0x110>
     cf0:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     cf4:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     cf8:	89 2b       	or	r24, r25
     cfa:	d1 f4       	brne	.+52     	; 0xd30 <buttonEnter+0x44>
     cfc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     d00:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     d04:	90 93 c4 01 	sts	0x01C4, r25	; 0x8001c4 <menuFlag+0x1>
     d08:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <menuFlag>
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     d14:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     d18:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     d1c:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     d20:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     d24:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     d28:	40 e0       	ldi	r20, 0x00	; 0
     d2a:	50 e0       	ldi	r21, 0x00	; 0
     d2c:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     d30:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     d34:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     d38:	01 97       	sbiw	r24, 0x01	; 1
     d3a:	e1 f4       	brne	.+56     	; 0xd74 <buttonEnter+0x88>
     d3c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     d40:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     d44:	06 97       	sbiw	r24, 0x06	; 6
     d46:	b1 f4       	brne	.+44     	; 0xd74 <buttonEnter+0x88>
     d48:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <menuFlag+0x1>
     d4c:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <menuFlag>
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     d58:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     d5c:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     d60:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     d64:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     d68:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     d6c:	40 e0       	ldi	r20, 0x00	; 0
     d6e:	50 e0       	ldi	r21, 0x00	; 0
     d70:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     d74:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     d78:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     d7c:	02 97       	sbiw	r24, 0x02	; 2
     d7e:	e1 f4       	brne	.+56     	; 0xdb8 <buttonEnter+0xcc>
     d80:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     d84:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     d88:	07 97       	sbiw	r24, 0x07	; 7
     d8a:	b1 f4       	brne	.+44     	; 0xdb8 <buttonEnter+0xcc>
     d8c:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <menuFlag+0x1>
     d90:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <menuFlag>
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     d9c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     da0:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     da4:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     da8:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     dac:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     db0:	40 e0       	ldi	r20, 0x00	; 0
     db2:	50 e0       	ldi	r21, 0x00	; 0
     db4:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     db8:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     dbc:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     dc0:	03 97       	sbiw	r24, 0x03	; 3
     dc2:	e1 f4       	brne	.+56     	; 0xdfc <buttonEnter+0x110>
     dc4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <UpDownFlag>
     dc8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <UpDownFlag+0x1>
     dcc:	03 97       	sbiw	r24, 0x03	; 3
     dce:	b1 f4       	brne	.+44     	; 0xdfc <buttonEnter+0x110>
     dd0:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <menuFlag+0x1>
     dd4:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <menuFlag>
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <UpDownFlag+0x1>
     de0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UpDownFlag>
     de4:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     de8:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     dec:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     df0:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     df4:	40 e0       	ldi	r20, 0x00	; 0
     df6:	50 e0       	ldi	r21, 0x00	; 0
     df8:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     dfc:	08 95       	ret

00000dfe <buttonLeft>:
     dfe:	4d 99       	sbic	0x09, 5	; 9
     e00:	1f c0       	rjmp	.+62     	; 0xe40 <buttonLeft+0x42>
     e02:	2f ef       	ldi	r18, 0xFF	; 255
     e04:	81 ee       	ldi	r24, 0xE1	; 225
     e06:	94 e0       	ldi	r25, 0x04	; 4
     e08:	21 50       	subi	r18, 0x01	; 1
     e0a:	80 40       	sbci	r24, 0x00	; 0
     e0c:	90 40       	sbci	r25, 0x00	; 0
     e0e:	e1 f7       	brne	.-8      	; 0xe08 <buttonLeft+0xa>
     e10:	00 c0       	rjmp	.+0      	; 0xe12 <buttonLeft+0x14>
     e12:	00 00       	nop
     e14:	9b b1       	in	r25, 0x0b	; 11
     e16:	80 e2       	ldi	r24, 0x20	; 32
     e18:	89 27       	eor	r24, r25
     e1a:	8b b9       	out	0x0b, r24	; 11
     e1c:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     e20:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     e24:	02 97       	sbiw	r24, 0x02	; 2
     e26:	61 f4       	brne	.+24     	; 0xe40 <buttonLeft+0x42>
     e28:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     e2c:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     e30:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     e34:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     e38:	4f ef       	ldi	r20, 0xFF	; 255
     e3a:	5f ef       	ldi	r21, 0xFF	; 255
     e3c:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     e40:	08 95       	ret

00000e42 <__vector_5>:
     e42:	1f 92       	push	r1
     e44:	0f 92       	push	r0
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	0f 92       	push	r0
     e4a:	11 24       	eor	r1, r1
     e4c:	2f 93       	push	r18
     e4e:	3f 93       	push	r19
     e50:	4f 93       	push	r20
     e52:	5f 93       	push	r21
     e54:	6f 93       	push	r22
     e56:	7f 93       	push	r23
     e58:	8f 93       	push	r24
     e5a:	9f 93       	push	r25
     e5c:	af 93       	push	r26
     e5e:	bf 93       	push	r27
     e60:	ef 93       	push	r30
     e62:	ff 93       	push	r31
     e64:	0e 94 ff 06 	call	0xdfe	; 0xdfe <buttonLeft>
     e68:	0e 94 2c 06 	call	0xc58	; 0xc58 <buttonUp>
     e6c:	0e 94 76 06 	call	0xcec	; 0xcec <buttonEnter>
     e70:	ff 91       	pop	r31
     e72:	ef 91       	pop	r30
     e74:	bf 91       	pop	r27
     e76:	af 91       	pop	r26
     e78:	9f 91       	pop	r25
     e7a:	8f 91       	pop	r24
     e7c:	7f 91       	pop	r23
     e7e:	6f 91       	pop	r22
     e80:	5f 91       	pop	r21
     e82:	4f 91       	pop	r20
     e84:	3f 91       	pop	r19
     e86:	2f 91       	pop	r18
     e88:	0f 90       	pop	r0
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	0f 90       	pop	r0
     e8e:	1f 90       	pop	r1
     e90:	18 95       	reti

00000e92 <buttonRight>:
     e92:	19 99       	sbic	0x03, 1	; 3
     e94:	1f c0       	rjmp	.+62     	; 0xed4 <buttonRight+0x42>
     e96:	2f ef       	ldi	r18, 0xFF	; 255
     e98:	81 ee       	ldi	r24, 0xE1	; 225
     e9a:	94 e0       	ldi	r25, 0x04	; 4
     e9c:	21 50       	subi	r18, 0x01	; 1
     e9e:	80 40       	sbci	r24, 0x00	; 0
     ea0:	90 40       	sbci	r25, 0x00	; 0
     ea2:	e1 f7       	brne	.-8      	; 0xe9c <buttonRight+0xa>
     ea4:	00 c0       	rjmp	.+0      	; 0xea6 <buttonRight+0x14>
     ea6:	00 00       	nop
     ea8:	95 b1       	in	r25, 0x05	; 5
     eaa:	82 e0       	ldi	r24, 0x02	; 2
     eac:	89 27       	eor	r24, r25
     eae:	85 b9       	out	0x05, r24	; 5
     eb0:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     eb4:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     eb8:	02 97       	sbiw	r24, 0x02	; 2
     eba:	61 f4       	brne	.+24     	; 0xed4 <buttonRight+0x42>
     ebc:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
     ec0:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
     ec4:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <menuFlag>
     ec8:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <menuFlag+0x1>
     ecc:	41 e0       	ldi	r20, 0x01	; 1
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
     ed4:	08 95       	ret

00000ed6 <__vector_3>:
     ed6:	1f 92       	push	r1
     ed8:	0f 92       	push	r0
     eda:	0f b6       	in	r0, 0x3f	; 63
     edc:	0f 92       	push	r0
     ede:	11 24       	eor	r1, r1
     ee0:	2f 93       	push	r18
     ee2:	3f 93       	push	r19
     ee4:	4f 93       	push	r20
     ee6:	5f 93       	push	r21
     ee8:	6f 93       	push	r22
     eea:	7f 93       	push	r23
     eec:	8f 93       	push	r24
     eee:	9f 93       	push	r25
     ef0:	af 93       	push	r26
     ef2:	bf 93       	push	r27
     ef4:	ef 93       	push	r30
     ef6:	ff 93       	push	r31
     ef8:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <buttonDown>
     efc:	0e 94 49 07 	call	0xe92	; 0xe92 <buttonRight>
     f00:	ff 91       	pop	r31
     f02:	ef 91       	pop	r30
     f04:	bf 91       	pop	r27
     f06:	af 91       	pop	r26
     f08:	9f 91       	pop	r25
     f0a:	8f 91       	pop	r24
     f0c:	7f 91       	pop	r23
     f0e:	6f 91       	pop	r22
     f10:	5f 91       	pop	r21
     f12:	4f 91       	pop	r20
     f14:	3f 91       	pop	r19
     f16:	2f 91       	pop	r18
     f18:	0f 90       	pop	r0
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	0f 90       	pop	r0
     f1e:	1f 90       	pop	r1
     f20:	18 95       	reti

00000f22 <outputEnable_2>:


void outputEnable_2(int hysteresis) {
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	ec 01       	movw	r28, r24
	int Lighting = -1;
	int newValue = convertToPercentages(adc_result1);		//przypisanie wartosci foto adc do nowej zmiennej
     f28:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <adc_result1>
     f2c:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <adc_result1+0x1>
     f30:	0e 94 b8 05 	call	0xb70	; 0xb70 <convertToPercentages>
	
	if(lightFlag == 0 ) {									//flaga = 0, wchodzimy w if
     f34:	20 91 c1 01 	lds	r18, 0x01C1	; 0x8001c1 <lightFlag>
     f38:	30 91 c2 01 	lds	r19, 0x01C2	; 0x8001c2 <lightFlag+0x1>
     f3c:	23 2b       	or	r18, r19
     f3e:	d1 f4       	brne	.+52     	; 0xf74 <outputEnable_2+0x52>
		if(newValue <= thresholdsParameters.foto) {			//jezeli przypisana wartosc jest mniejsza lub rowna ustawionemu progowi
     f40:	20 91 cd 01 	lds	r18, 0x01CD	; 0x8001cd <thresholdsParameters+0x8>
     f44:	30 91 ce 01 	lds	r19, 0x01CE	; 0x8001ce <thresholdsParameters+0x9>
     f48:	28 17       	cp	r18, r24
     f4a:	39 07       	cpc	r19, r25
     f4c:	fc f0       	brlt	.+62     	; 0xf8c <outputEnable_2+0x6a>
			lightFlag = 1;									//zmien wartosc flagi
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	90 93 c2 01 	sts	0x01C2, r25	; 0x8001c2 <lightFlag+0x1>
     f56:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <lightFlag>
			PORTC |= Out_4;									//zapal swiatlo
     f5a:	88 b1       	in	r24, 0x08	; 8
     f5c:	88 60       	ori	r24, 0x08	; 8
     f5e:	88 b9       	out	0x08, r24	; 8
     f60:	2f ef       	ldi	r18, 0xFF	; 255
     f62:	81 ee       	ldi	r24, 0xE1	; 225
     f64:	94 e0       	ldi	r25, 0x04	; 4
     f66:	21 50       	subi	r18, 0x01	; 1
     f68:	80 40       	sbci	r24, 0x00	; 0
     f6a:	90 40       	sbci	r25, 0x00	; 0
     f6c:	e1 f7       	brne	.-8      	; 0xf66 <outputEnable_2+0x44>
     f6e:	00 c0       	rjmp	.+0      	; 0xf70 <outputEnable_2+0x4e>
     f70:	00 00       	nop
     f72:	0c c0       	rjmp	.+24     	; 0xf8c <outputEnable_2+0x6a>
	}
	else { //lightFlag = 1									//jezeli swiatlo juz sie pali
		if(Lighting == -1) {								//flaga = -1, wchodzimy w if
			Lighting = newValue;							//przypisanie wartosci foto adc, po zapaleniu swiatla, do zmiennej
		}
		if(newValue + hysteresis >= Lighting) {				//jezeli aktualna wartosc foto + hysteresa jest wieksza lub rowna wartosci w momencie zapalenia swiatla
     f74:	c8 0f       	add	r28, r24
     f76:	d9 1f       	adc	r29, r25
     f78:	c8 17       	cp	r28, r24
     f7a:	d9 07       	cpc	r29, r25
     f7c:	3c f0       	brlt	.+14     	; 0xf8c <outputEnable_2+0x6a>
			lightFlag = 0;									//zeruj flage
     f7e:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <lightFlag+0x1>
     f82:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <lightFlag>
			PORTC &= ~Out_4;								//zgas swiatlo
     f86:	88 b1       	in	r24, 0x08	; 8
     f88:	87 7f       	andi	r24, 0xF7	; 247
     f8a:	88 b9       	out	0x08, r24	; 8
			Lighting = -1;									//zeruj flage
		}
	}
}
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	08 95       	ret

00000f92 <main>:
{
	rtct rtc;
	//char usartChar;
	
	//DDRD |= (1<<PD3); //wyjscie dodatkowe
	DDRD |= (1<<PD4); //wyjscie dodatkowe
     f92:	8a b1       	in	r24, 0x0a	; 10
     f94:	80 61       	ori	r24, 0x10	; 16
     f96:	8a b9       	out	0x0a, r24	; 10
	
	DDRC |= Out_1; //wyjscie 230V
     f98:	87 b1       	in	r24, 0x07	; 7
     f9a:	81 60       	ori	r24, 0x01	; 1
     f9c:	87 b9       	out	0x07, r24	; 7
	DDRC |= Out_2; //wyjscie 230V
     f9e:	87 b1       	in	r24, 0x07	; 7
     fa0:	82 60       	ori	r24, 0x02	; 2
     fa2:	87 b9       	out	0x07, r24	; 7
	DDRC |= Out_3; //wyjscie 12V dolne*/
     fa4:	87 b1       	in	r24, 0x07	; 7
     fa6:	84 60       	ori	r24, 0x04	; 4
     fa8:	87 b9       	out	0x07, r24	; 7
	DDRC |= Out_4; //wyjscie 12V gorne
     faa:	87 b1       	in	r24, 0x07	; 7
     fac:	88 60       	ori	r24, 0x08	; 8
     fae:	87 b9       	out	0x07, r24	; 7

	PCMSK0 |= (1 << PCINT0) | (1 << PCINT1); // przerwania PCINT0
     fb0:	eb e6       	ldi	r30, 0x6B	; 107
     fb2:	f0 e0       	ldi	r31, 0x00	; 0
     fb4:	80 81       	ld	r24, Z
     fb6:	83 60       	ori	r24, 0x03	; 3
     fb8:	80 83       	st	Z, r24
	PCMSK2 |= (1 << PCINT21) | (1 << PCINT22) | (1 << PCINT23); // przerwania PCINT2
     fba:	ed e6       	ldi	r30, 0x6D	; 109
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	80 81       	ld	r24, Z
     fc0:	80 6e       	ori	r24, 0xE0	; 224
     fc2:	80 83       	st	Z, r24
	PCICR |= (1 << PCIE0) | (1 << PCIE2);
     fc4:	e8 e6       	ldi	r30, 0x68	; 104
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	80 81       	ld	r24, Z
     fca:	85 60       	ori	r24, 0x05	; 5
     fcc:	80 83       	st	Z, r24

	PORTB |= keyLeft;
     fce:	85 b1       	in	r24, 0x05	; 5
     fd0:	81 60       	ori	r24, 0x01	; 1
     fd2:	85 b9       	out	0x05, r24	; 5
	PORTB |= keyRight;
     fd4:	85 b1       	in	r24, 0x05	; 5
     fd6:	82 60       	ori	r24, 0x02	; 2
     fd8:	85 b9       	out	0x05, r24	; 5
	PORTD |= keyUp;
     fda:	8b b1       	in	r24, 0x0b	; 11
     fdc:	80 62       	ori	r24, 0x20	; 32
     fde:	8b b9       	out	0x0b, r24	; 11
	PORTD |= keyDown;
     fe0:	8b b1       	in	r24, 0x0b	; 11
     fe2:	80 64       	ori	r24, 0x40	; 64
     fe4:	8b b9       	out	0x0b, r24	; 11
	PORTD |= keyEnter;
     fe6:	8b b1       	in	r24, 0x0b	; 11
     fe8:	80 68       	ori	r24, 0x80	; 128
     fea:	8b b9       	out	0x0b, r24	; 11

	//SENSORS
	readingParameters.temp = 10; //przypisac do czujnikow
     fec:	e4 ed       	ldi	r30, 0xD4	; 212
     fee:	f1 e0       	ldi	r31, 0x01	; 1
     ff0:	8a e0       	ldi	r24, 0x0A	; 10
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	91 83       	std	Z+1, r25	; 0x01
     ff6:	80 83       	st	Z, r24
	readingParameters.hum = 20;
     ff8:	84 e1       	ldi	r24, 0x14	; 20
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	93 83       	std	Z+3, r25	; 0x03
     ffe:	82 83       	std	Z+2, r24	; 0x02
	readingParameters.press = 30;
    1000:	8e e1       	ldi	r24, 0x1E	; 30
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	95 83       	std	Z+5, r25	; 0x05
    1006:	84 83       	std	Z+4, r24	; 0x04
	readingParameters.wg;
    1008:	86 81       	ldd	r24, Z+6	; 0x06
    100a:	97 81       	ldd	r25, Z+7	; 0x07
	readingParameters.foto;
    100c:	80 85       	ldd	r24, Z+8	; 0x08
    100e:	91 85       	ldd	r25, Z+9	; 0x09

	thresholdsParameters.temp = 15; //progi
    1010:	e5 ec       	ldi	r30, 0xC5	; 197
    1012:	f1 e0       	ldi	r31, 0x01	; 1
    1014:	8f e0       	ldi	r24, 0x0F	; 15
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	91 83       	std	Z+1, r25	; 0x01
    101a:	80 83       	st	Z, r24
	thresholdsParameters.hum = 25;
    101c:	89 e1       	ldi	r24, 0x19	; 25
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	93 83       	std	Z+3, r25	; 0x03
    1022:	82 83       	std	Z+2, r24	; 0x02
	thresholdsParameters.press = 35;
    1024:	83 e2       	ldi	r24, 0x23	; 35
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	95 83       	std	Z+5, r25	; 0x05
    102a:	84 83       	std	Z+4, r24	; 0x04
	thresholdsParameters.wg = 45;
    102c:	8d e2       	ldi	r24, 0x2D	; 45
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	97 83       	std	Z+7, r25	; 0x07
    1032:	86 83       	std	Z+6, r24	; 0x06
	thresholdsParameters.foto = 0;
    1034:	11 86       	std	Z+9, r1	; 0x09
    1036:	10 86       	std	Z+8, r1	; 0x08

	ADC_init();
    1038:	0e 94 82 05 	call	0xb04	; 0xb04 <ADC_init>
	USART_Init();
    103c:	0e 94 73 05 	call	0xae6	; 0xae6 <USART_Init>
	LCDinit();
    1040:	0e 94 3d 01 	call	0x27a	; 0x27a <LCDinit>
	RTCinit();
    1044:	0e 94 c8 05 	call	0xb90	; 0xb90 <RTCinit>
	LCDhome();
    1048:	0e 94 12 01 	call	0x224	; 0x224 <LCDhome>
	LCDclr();
    104c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCDclr>
	rtc.month = 0x01;
	rtc.year = 0x16;
	rtc.weekDay = 5; // Friday
	//RTC_SetDateTime(&rtc);  //  10:40:20 am, 1st Jan 2016
	
	sei();
    1050:	78 94       	sei

	//displayStartInformation();
	displayMenu(MENU_START,UpDownFlag, 0);	//start menu, indicator=1*/
    1052:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <UpDownFlag>
    1056:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <UpDownFlag+0x1>
    105a:	40 e0       	ldi	r20, 0x00	; 0
    105c:	50 e0       	ldi	r21, 0x00	; 0
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 a5 04 	call	0x94a	; 0x94a <displayMenu>
		buttonRight();*/
		
		//if(menuFlag == 0)
			//timerDisplay(&rtc);
			
		PORTD ^= (1<<PD4);
    1066:	9b b1       	in	r25, 0x0b	; 11
    1068:	80 e1       	ldi	r24, 0x10	; 16
    106a:	89 27       	eor	r24, r25
    106c:	8b b9       	out	0x0b, r24	; 11
		
		adc_result0 = adc_read(6);		// read adc value at PE2
    106e:	86 e0       	ldi	r24, 0x06	; 6
    1070:	0e 94 93 05 	call	0xb26	; 0xb26 <adc_read>
    1074:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <adc_result0+0x1>
    1078:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <adc_result0>
		adc_result1 = adc_read(7);		// read adc value at PE3
    107c:	87 e0       	ldi	r24, 0x07	; 7
    107e:	0e 94 93 05 	call	0xb26	; 0xb26 <adc_read>
    1082:	8c 01       	movw	r16, r24
    1084:	90 93 d2 01 	sts	0x01D2, r25	; 0x8001d2 <adc_result1+0x1>
    1088:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <adc_result1>
		readingParameters.wg = convertToPercentages(adc_result0);
    108c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <adc_result0>
    1090:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <adc_result0+0x1>
    1094:	0e 94 b8 05 	call	0xb70	; 0xb70 <convertToPercentages>
    1098:	c4 ed       	ldi	r28, 0xD4	; 212
    109a:	d1 e0       	ldi	r29, 0x01	; 1
    109c:	9f 83       	std	Y+7, r25	; 0x07
    109e:	8e 83       	std	Y+6, r24	; 0x06
		readingParameters.foto = convertToPercentages(adc_result1);
    10a0:	c8 01       	movw	r24, r16
    10a2:	0e 94 b8 05 	call	0xb70	; 0xb70 <convertToPercentages>
    10a6:	99 87       	std	Y+9, r25	; 0x09
    10a8:	88 87       	std	Y+8, r24	; 0x08
		
		outputEnable_2(thresholdsParameters.hysteresis);
    10aa:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <thresholdsParameters+0xa>
    10ae:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <thresholdsParameters+0xb>
    10b2:	0e 94 91 07 	call	0xf22	; 0xf22 <outputEnable_2>
		
		if(globalchar == '1') {
    10b6:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <globalchar>
    10ba:	81 33       	cpi	r24, 0x31	; 49
    10bc:	21 f4       	brne	.+8      	; 0x10c6 <main+0x134>
			PORTC |= Out_4;
    10be:	88 b1       	in	r24, 0x08	; 8
    10c0:	88 60       	ori	r24, 0x08	; 8
    10c2:	88 b9       	out	0x08, r24	; 8
    10c4:	d0 cf       	rjmp	.-96     	; 0x1066 <main+0xd4>
		}
		else if(globalchar == '2')
    10c6:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <globalchar>
    10ca:	82 33       	cpi	r24, 0x32	; 50
    10cc:	61 f6       	brne	.-104    	; 0x1066 <main+0xd4>
			PORTC &= ~Out_4;
    10ce:	88 b1       	in	r24, 0x08	; 8
    10d0:	87 7f       	andi	r24, 0xF7	; 247
    10d2:	88 b9       	out	0x08, r24	; 8
    10d4:	c8 cf       	rjmp	.-112    	; 0x1066 <main+0xd4>

000010d6 <__fixsfsi>:
    10d6:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__fixunssfsi>
    10da:	68 94       	set
    10dc:	b1 11       	cpse	r27, r1
    10de:	0c 94 29 09 	jmp	0x1252	; 0x1252 <__fp_szero>
    10e2:	08 95       	ret

000010e4 <__fixunssfsi>:
    10e4:	0e 94 0e 09 	call	0x121c	; 0x121c <__fp_splitA>
    10e8:	88 f0       	brcs	.+34     	; 0x110c <__fixunssfsi+0x28>
    10ea:	9f 57       	subi	r25, 0x7F	; 127
    10ec:	98 f0       	brcs	.+38     	; 0x1114 <__fixunssfsi+0x30>
    10ee:	b9 2f       	mov	r27, r25
    10f0:	99 27       	eor	r25, r25
    10f2:	b7 51       	subi	r27, 0x17	; 23
    10f4:	b0 f0       	brcs	.+44     	; 0x1122 <__fixunssfsi+0x3e>
    10f6:	e1 f0       	breq	.+56     	; 0x1130 <__fixunssfsi+0x4c>
    10f8:	66 0f       	add	r22, r22
    10fa:	77 1f       	adc	r23, r23
    10fc:	88 1f       	adc	r24, r24
    10fe:	99 1f       	adc	r25, r25
    1100:	1a f0       	brmi	.+6      	; 0x1108 <__fixunssfsi+0x24>
    1102:	ba 95       	dec	r27
    1104:	c9 f7       	brne	.-14     	; 0x10f8 <__fixunssfsi+0x14>
    1106:	14 c0       	rjmp	.+40     	; 0x1130 <__fixunssfsi+0x4c>
    1108:	b1 30       	cpi	r27, 0x01	; 1
    110a:	91 f0       	breq	.+36     	; 0x1130 <__fixunssfsi+0x4c>
    110c:	0e 94 28 09 	call	0x1250	; 0x1250 <__fp_zero>
    1110:	b1 e0       	ldi	r27, 0x01	; 1
    1112:	08 95       	ret
    1114:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_zero>
    1118:	67 2f       	mov	r22, r23
    111a:	78 2f       	mov	r23, r24
    111c:	88 27       	eor	r24, r24
    111e:	b8 5f       	subi	r27, 0xF8	; 248
    1120:	39 f0       	breq	.+14     	; 0x1130 <__fixunssfsi+0x4c>
    1122:	b9 3f       	cpi	r27, 0xF9	; 249
    1124:	cc f3       	brlt	.-14     	; 0x1118 <__fixunssfsi+0x34>
    1126:	86 95       	lsr	r24
    1128:	77 95       	ror	r23
    112a:	67 95       	ror	r22
    112c:	b3 95       	inc	r27
    112e:	d9 f7       	brne	.-10     	; 0x1126 <__fixunssfsi+0x42>
    1130:	3e f4       	brtc	.+14     	; 0x1140 <__fixunssfsi+0x5c>
    1132:	90 95       	com	r25
    1134:	80 95       	com	r24
    1136:	70 95       	com	r23
    1138:	61 95       	neg	r22
    113a:	7f 4f       	sbci	r23, 0xFF	; 255
    113c:	8f 4f       	sbci	r24, 0xFF	; 255
    113e:	9f 4f       	sbci	r25, 0xFF	; 255
    1140:	08 95       	ret

00001142 <__floatunsisf>:
    1142:	e8 94       	clt
    1144:	09 c0       	rjmp	.+18     	; 0x1158 <__floatsisf+0x12>

00001146 <__floatsisf>:
    1146:	97 fb       	bst	r25, 7
    1148:	3e f4       	brtc	.+14     	; 0x1158 <__floatsisf+0x12>
    114a:	90 95       	com	r25
    114c:	80 95       	com	r24
    114e:	70 95       	com	r23
    1150:	61 95       	neg	r22
    1152:	7f 4f       	sbci	r23, 0xFF	; 255
    1154:	8f 4f       	sbci	r24, 0xFF	; 255
    1156:	9f 4f       	sbci	r25, 0xFF	; 255
    1158:	99 23       	and	r25, r25
    115a:	a9 f0       	breq	.+42     	; 0x1186 <__floatsisf+0x40>
    115c:	f9 2f       	mov	r31, r25
    115e:	96 e9       	ldi	r25, 0x96	; 150
    1160:	bb 27       	eor	r27, r27
    1162:	93 95       	inc	r25
    1164:	f6 95       	lsr	r31
    1166:	87 95       	ror	r24
    1168:	77 95       	ror	r23
    116a:	67 95       	ror	r22
    116c:	b7 95       	ror	r27
    116e:	f1 11       	cpse	r31, r1
    1170:	f8 cf       	rjmp	.-16     	; 0x1162 <__floatsisf+0x1c>
    1172:	fa f4       	brpl	.+62     	; 0x11b2 <__floatsisf+0x6c>
    1174:	bb 0f       	add	r27, r27
    1176:	11 f4       	brne	.+4      	; 0x117c <__floatsisf+0x36>
    1178:	60 ff       	sbrs	r22, 0
    117a:	1b c0       	rjmp	.+54     	; 0x11b2 <__floatsisf+0x6c>
    117c:	6f 5f       	subi	r22, 0xFF	; 255
    117e:	7f 4f       	sbci	r23, 0xFF	; 255
    1180:	8f 4f       	sbci	r24, 0xFF	; 255
    1182:	9f 4f       	sbci	r25, 0xFF	; 255
    1184:	16 c0       	rjmp	.+44     	; 0x11b2 <__floatsisf+0x6c>
    1186:	88 23       	and	r24, r24
    1188:	11 f0       	breq	.+4      	; 0x118e <__floatsisf+0x48>
    118a:	96 e9       	ldi	r25, 0x96	; 150
    118c:	11 c0       	rjmp	.+34     	; 0x11b0 <__floatsisf+0x6a>
    118e:	77 23       	and	r23, r23
    1190:	21 f0       	breq	.+8      	; 0x119a <__floatsisf+0x54>
    1192:	9e e8       	ldi	r25, 0x8E	; 142
    1194:	87 2f       	mov	r24, r23
    1196:	76 2f       	mov	r23, r22
    1198:	05 c0       	rjmp	.+10     	; 0x11a4 <__floatsisf+0x5e>
    119a:	66 23       	and	r22, r22
    119c:	71 f0       	breq	.+28     	; 0x11ba <__floatsisf+0x74>
    119e:	96 e8       	ldi	r25, 0x86	; 134
    11a0:	86 2f       	mov	r24, r22
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	60 e0       	ldi	r22, 0x00	; 0
    11a6:	2a f0       	brmi	.+10     	; 0x11b2 <__floatsisf+0x6c>
    11a8:	9a 95       	dec	r25
    11aa:	66 0f       	add	r22, r22
    11ac:	77 1f       	adc	r23, r23
    11ae:	88 1f       	adc	r24, r24
    11b0:	da f7       	brpl	.-10     	; 0x11a8 <__floatsisf+0x62>
    11b2:	88 0f       	add	r24, r24
    11b4:	96 95       	lsr	r25
    11b6:	87 95       	ror	r24
    11b8:	97 f9       	bld	r25, 7
    11ba:	08 95       	ret

000011bc <__fp_inf>:
    11bc:	97 f9       	bld	r25, 7
    11be:	9f 67       	ori	r25, 0x7F	; 127
    11c0:	80 e8       	ldi	r24, 0x80	; 128
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	60 e0       	ldi	r22, 0x00	; 0
    11c6:	08 95       	ret

000011c8 <__fp_nan>:
    11c8:	9f ef       	ldi	r25, 0xFF	; 255
    11ca:	80 ec       	ldi	r24, 0xC0	; 192
    11cc:	08 95       	ret

000011ce <__fp_pscA>:
    11ce:	00 24       	eor	r0, r0
    11d0:	0a 94       	dec	r0
    11d2:	16 16       	cp	r1, r22
    11d4:	17 06       	cpc	r1, r23
    11d6:	18 06       	cpc	r1, r24
    11d8:	09 06       	cpc	r0, r25
    11da:	08 95       	ret

000011dc <__fp_pscB>:
    11dc:	00 24       	eor	r0, r0
    11de:	0a 94       	dec	r0
    11e0:	12 16       	cp	r1, r18
    11e2:	13 06       	cpc	r1, r19
    11e4:	14 06       	cpc	r1, r20
    11e6:	05 06       	cpc	r0, r21
    11e8:	08 95       	ret

000011ea <__fp_round>:
    11ea:	09 2e       	mov	r0, r25
    11ec:	03 94       	inc	r0
    11ee:	00 0c       	add	r0, r0
    11f0:	11 f4       	brne	.+4      	; 0x11f6 <__fp_round+0xc>
    11f2:	88 23       	and	r24, r24
    11f4:	52 f0       	brmi	.+20     	; 0x120a <__fp_round+0x20>
    11f6:	bb 0f       	add	r27, r27
    11f8:	40 f4       	brcc	.+16     	; 0x120a <__fp_round+0x20>
    11fa:	bf 2b       	or	r27, r31
    11fc:	11 f4       	brne	.+4      	; 0x1202 <__fp_round+0x18>
    11fe:	60 ff       	sbrs	r22, 0
    1200:	04 c0       	rjmp	.+8      	; 0x120a <__fp_round+0x20>
    1202:	6f 5f       	subi	r22, 0xFF	; 255
    1204:	7f 4f       	sbci	r23, 0xFF	; 255
    1206:	8f 4f       	sbci	r24, 0xFF	; 255
    1208:	9f 4f       	sbci	r25, 0xFF	; 255
    120a:	08 95       	ret

0000120c <__fp_split3>:
    120c:	57 fd       	sbrc	r21, 7
    120e:	90 58       	subi	r25, 0x80	; 128
    1210:	44 0f       	add	r20, r20
    1212:	55 1f       	adc	r21, r21
    1214:	59 f0       	breq	.+22     	; 0x122c <__fp_splitA+0x10>
    1216:	5f 3f       	cpi	r21, 0xFF	; 255
    1218:	71 f0       	breq	.+28     	; 0x1236 <__fp_splitA+0x1a>
    121a:	47 95       	ror	r20

0000121c <__fp_splitA>:
    121c:	88 0f       	add	r24, r24
    121e:	97 fb       	bst	r25, 7
    1220:	99 1f       	adc	r25, r25
    1222:	61 f0       	breq	.+24     	; 0x123c <__fp_splitA+0x20>
    1224:	9f 3f       	cpi	r25, 0xFF	; 255
    1226:	79 f0       	breq	.+30     	; 0x1246 <__fp_splitA+0x2a>
    1228:	87 95       	ror	r24
    122a:	08 95       	ret
    122c:	12 16       	cp	r1, r18
    122e:	13 06       	cpc	r1, r19
    1230:	14 06       	cpc	r1, r20
    1232:	55 1f       	adc	r21, r21
    1234:	f2 cf       	rjmp	.-28     	; 0x121a <__fp_split3+0xe>
    1236:	46 95       	lsr	r20
    1238:	f1 df       	rcall	.-30     	; 0x121c <__fp_splitA>
    123a:	08 c0       	rjmp	.+16     	; 0x124c <__fp_splitA+0x30>
    123c:	16 16       	cp	r1, r22
    123e:	17 06       	cpc	r1, r23
    1240:	18 06       	cpc	r1, r24
    1242:	99 1f       	adc	r25, r25
    1244:	f1 cf       	rjmp	.-30     	; 0x1228 <__fp_splitA+0xc>
    1246:	86 95       	lsr	r24
    1248:	71 05       	cpc	r23, r1
    124a:	61 05       	cpc	r22, r1
    124c:	08 94       	sec
    124e:	08 95       	ret

00001250 <__fp_zero>:
    1250:	e8 94       	clt

00001252 <__fp_szero>:
    1252:	bb 27       	eor	r27, r27
    1254:	66 27       	eor	r22, r22
    1256:	77 27       	eor	r23, r23
    1258:	cb 01       	movw	r24, r22
    125a:	97 f9       	bld	r25, 7
    125c:	08 95       	ret

0000125e <__mulsf3>:
    125e:	0e 94 42 09 	call	0x1284	; 0x1284 <__mulsf3x>
    1262:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <__fp_round>
    1266:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fp_pscA>
    126a:	38 f0       	brcs	.+14     	; 0x127a <__mulsf3+0x1c>
    126c:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__fp_pscB>
    1270:	20 f0       	brcs	.+8      	; 0x127a <__mulsf3+0x1c>
    1272:	95 23       	and	r25, r21
    1274:	11 f0       	breq	.+4      	; 0x127a <__mulsf3+0x1c>
    1276:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <__fp_inf>
    127a:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__fp_nan>
    127e:	11 24       	eor	r1, r1
    1280:	0c 94 29 09 	jmp	0x1252	; 0x1252 <__fp_szero>

00001284 <__mulsf3x>:
    1284:	0e 94 06 09 	call	0x120c	; 0x120c <__fp_split3>
    1288:	70 f3       	brcs	.-36     	; 0x1266 <__mulsf3+0x8>

0000128a <__mulsf3_pse>:
    128a:	95 9f       	mul	r25, r21
    128c:	c1 f3       	breq	.-16     	; 0x127e <__mulsf3+0x20>
    128e:	95 0f       	add	r25, r21
    1290:	50 e0       	ldi	r21, 0x00	; 0
    1292:	55 1f       	adc	r21, r21
    1294:	62 9f       	mul	r22, r18
    1296:	f0 01       	movw	r30, r0
    1298:	72 9f       	mul	r23, r18
    129a:	bb 27       	eor	r27, r27
    129c:	f0 0d       	add	r31, r0
    129e:	b1 1d       	adc	r27, r1
    12a0:	63 9f       	mul	r22, r19
    12a2:	aa 27       	eor	r26, r26
    12a4:	f0 0d       	add	r31, r0
    12a6:	b1 1d       	adc	r27, r1
    12a8:	aa 1f       	adc	r26, r26
    12aa:	64 9f       	mul	r22, r20
    12ac:	66 27       	eor	r22, r22
    12ae:	b0 0d       	add	r27, r0
    12b0:	a1 1d       	adc	r26, r1
    12b2:	66 1f       	adc	r22, r22
    12b4:	82 9f       	mul	r24, r18
    12b6:	22 27       	eor	r18, r18
    12b8:	b0 0d       	add	r27, r0
    12ba:	a1 1d       	adc	r26, r1
    12bc:	62 1f       	adc	r22, r18
    12be:	73 9f       	mul	r23, r19
    12c0:	b0 0d       	add	r27, r0
    12c2:	a1 1d       	adc	r26, r1
    12c4:	62 1f       	adc	r22, r18
    12c6:	83 9f       	mul	r24, r19
    12c8:	a0 0d       	add	r26, r0
    12ca:	61 1d       	adc	r22, r1
    12cc:	22 1f       	adc	r18, r18
    12ce:	74 9f       	mul	r23, r20
    12d0:	33 27       	eor	r19, r19
    12d2:	a0 0d       	add	r26, r0
    12d4:	61 1d       	adc	r22, r1
    12d6:	23 1f       	adc	r18, r19
    12d8:	84 9f       	mul	r24, r20
    12da:	60 0d       	add	r22, r0
    12dc:	21 1d       	adc	r18, r1
    12de:	82 2f       	mov	r24, r18
    12e0:	76 2f       	mov	r23, r22
    12e2:	6a 2f       	mov	r22, r26
    12e4:	11 24       	eor	r1, r1
    12e6:	9f 57       	subi	r25, 0x7F	; 127
    12e8:	50 40       	sbci	r21, 0x00	; 0
    12ea:	9a f0       	brmi	.+38     	; 0x1312 <__mulsf3_pse+0x88>
    12ec:	f1 f0       	breq	.+60     	; 0x132a <__mulsf3_pse+0xa0>
    12ee:	88 23       	and	r24, r24
    12f0:	4a f0       	brmi	.+18     	; 0x1304 <__mulsf3_pse+0x7a>
    12f2:	ee 0f       	add	r30, r30
    12f4:	ff 1f       	adc	r31, r31
    12f6:	bb 1f       	adc	r27, r27
    12f8:	66 1f       	adc	r22, r22
    12fa:	77 1f       	adc	r23, r23
    12fc:	88 1f       	adc	r24, r24
    12fe:	91 50       	subi	r25, 0x01	; 1
    1300:	50 40       	sbci	r21, 0x00	; 0
    1302:	a9 f7       	brne	.-22     	; 0x12ee <__mulsf3_pse+0x64>
    1304:	9e 3f       	cpi	r25, 0xFE	; 254
    1306:	51 05       	cpc	r21, r1
    1308:	80 f0       	brcs	.+32     	; 0x132a <__mulsf3_pse+0xa0>
    130a:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <__fp_inf>
    130e:	0c 94 29 09 	jmp	0x1252	; 0x1252 <__fp_szero>
    1312:	5f 3f       	cpi	r21, 0xFF	; 255
    1314:	e4 f3       	brlt	.-8      	; 0x130e <__mulsf3_pse+0x84>
    1316:	98 3e       	cpi	r25, 0xE8	; 232
    1318:	d4 f3       	brlt	.-12     	; 0x130e <__mulsf3_pse+0x84>
    131a:	86 95       	lsr	r24
    131c:	77 95       	ror	r23
    131e:	67 95       	ror	r22
    1320:	b7 95       	ror	r27
    1322:	f7 95       	ror	r31
    1324:	e7 95       	ror	r30
    1326:	9f 5f       	subi	r25, 0xFF	; 255
    1328:	c1 f7       	brne	.-16     	; 0x131a <__mulsf3_pse+0x90>
    132a:	fe 2b       	or	r31, r30
    132c:	88 0f       	add	r24, r24
    132e:	91 1d       	adc	r25, r1
    1330:	96 95       	lsr	r25
    1332:	87 95       	ror	r24
    1334:	97 f9       	bld	r25, 7
    1336:	08 95       	ret

00001338 <__itoa_ncheck>:
    1338:	bb 27       	eor	r27, r27
    133a:	4a 30       	cpi	r20, 0x0A	; 10
    133c:	31 f4       	brne	.+12     	; 0x134a <__itoa_ncheck+0x12>
    133e:	99 23       	and	r25, r25
    1340:	22 f4       	brpl	.+8      	; 0x134a <__itoa_ncheck+0x12>
    1342:	bd e2       	ldi	r27, 0x2D	; 45
    1344:	90 95       	com	r25
    1346:	81 95       	neg	r24
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <__utoa_common>

0000134e <__utoa_ncheck>:
    134e:	bb 27       	eor	r27, r27

00001350 <__utoa_common>:
    1350:	fb 01       	movw	r30, r22
    1352:	55 27       	eor	r21, r21
    1354:	aa 27       	eor	r26, r26
    1356:	88 0f       	add	r24, r24
    1358:	99 1f       	adc	r25, r25
    135a:	aa 1f       	adc	r26, r26
    135c:	a4 17       	cp	r26, r20
    135e:	10 f0       	brcs	.+4      	; 0x1364 <__utoa_common+0x14>
    1360:	a4 1b       	sub	r26, r20
    1362:	83 95       	inc	r24
    1364:	50 51       	subi	r21, 0x10	; 16
    1366:	b9 f7       	brne	.-18     	; 0x1356 <__utoa_common+0x6>
    1368:	a0 5d       	subi	r26, 0xD0	; 208
    136a:	aa 33       	cpi	r26, 0x3A	; 58
    136c:	08 f0       	brcs	.+2      	; 0x1370 <__utoa_common+0x20>
    136e:	a9 5d       	subi	r26, 0xD9	; 217
    1370:	a1 93       	st	Z+, r26
    1372:	00 97       	sbiw	r24, 0x00	; 0
    1374:	79 f7       	brne	.-34     	; 0x1354 <__utoa_common+0x4>
    1376:	b1 11       	cpse	r27, r1
    1378:	b1 93       	st	Z+, r27
    137a:	11 92       	st	Z+, r1
    137c:	cb 01       	movw	r24, r22
    137e:	0c 94 c1 09 	jmp	0x1382	; 0x1382 <strrev>

00001382 <strrev>:
    1382:	dc 01       	movw	r26, r24
    1384:	fc 01       	movw	r30, r24
    1386:	67 2f       	mov	r22, r23
    1388:	71 91       	ld	r23, Z+
    138a:	77 23       	and	r23, r23
    138c:	e1 f7       	brne	.-8      	; 0x1386 <strrev+0x4>
    138e:	32 97       	sbiw	r30, 0x02	; 2
    1390:	04 c0       	rjmp	.+8      	; 0x139a <strrev+0x18>
    1392:	7c 91       	ld	r23, X
    1394:	6d 93       	st	X+, r22
    1396:	70 83       	st	Z, r23
    1398:	62 91       	ld	r22, -Z
    139a:	ae 17       	cp	r26, r30
    139c:	bf 07       	cpc	r27, r31
    139e:	c8 f3       	brcs	.-14     	; 0x1392 <strrev+0x10>
    13a0:	08 95       	ret

000013a2 <_exit>:
    13a2:	f8 94       	cli

000013a4 <__stop_program>:
    13a4:	ff cf       	rjmp	.-2      	; 0x13a4 <__stop_program>
